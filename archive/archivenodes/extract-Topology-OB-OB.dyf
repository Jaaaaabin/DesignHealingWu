{
  "Uuid": "2b12c9e0-2a73-4630-ba6a-04a44bed5b23",
  "IsCustomNode": true,
  "Category": "ModelHealer",
  "Description": "extract the topology between Objects",
  "Name": "extract-Topology-OB-OB",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "bc5b8366-c225-4166-a8ed-a3b20817c8e2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "e37431da82414009ad5479181f382e54",
      "Inputs": [
        {
          "Id": "bd7e4cb3231f4f76a46a9696e05b319d",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e601862f2cfd42369033dd26f776a5f5",
          "Name": "includeOpenings",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c80fe23be7e84abd95d0c9b6b3000a40",
          "Name": "includeShadows",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1d26a25a44c4366b54244776108b8a6",
          "Name": "includeEmbeddedWalls",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98800ff30b7447e6b437e13d6fa0849e",
          "Name": "includeSharedEmbeddedInserts",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fe76f1885c64757af0fd6915639a7c7",
          "Name": "inserts",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all the objects inserted into a given element."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "113ca46ca6064069bdc1424513c01320",
      "Inputs": [
        {
          "Id": "ddfb1e4e276246448b8ad49a3b599c86",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8450877bcde8471283c955b8eb0723d7",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c8f469aee704dde8c420fced999134f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "6fef3fad16944fcfb1ffb41d3c181888",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0cfcda541f2b4866b3debed9bd9dd1e7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "1f26068dfb8f40cea8ac70c9737e4644",
      "Inputs": [
        {
          "Id": "c615aacf09ef477b9120698e07c0e0ce",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7392e804bdf410c8480e8fb25467fda",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2497524e7b894c1dae53d49609396753",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "69c75387f9a24c239956c8c56416956b",
      "Inputs": [
        {
          "Id": "c40eeaf860854598b71f9b2ad003a6cc",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9055d31ac1254dd2a87ff12a5cbe1cd5",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe73e19211a64f96916ad01957211560",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "22b9bffe9b4a4ebaad48550c8c84d18c",
      "Inputs": [
        {
          "Id": "4067b454548a4adc9e79baff7f166e89",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a1db4a3af284ec7b5a6776e10cb576e",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0faaecdb0b0c4fd2a8787e1ebb3eeb66",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "82b16451618c4b5096041eb3d25100c2",
      "Inputs": [
        {
          "Id": "f7c27e80cc4d404587d6c9147977865b",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8d2b4b82224770a134c17169fabfa7",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99073b2c764d45ce801975483356a969",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "40ded8e1d70042f382d5f7206a787816",
      "Inputs": [
        {
          "Id": "9448b8ec6f08418d8f5ef86638cc7bb2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2828ce1dcdd04193a2c244a448abfcb9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9b92e65b42f433fb97f92cd446aee90",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 686,
      "SelectedString": "OST_Walls",
      "NodeType": "ExtensionNode",
      "Id": "e038a1b6ce00485097c85147374331a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c3321c20df5d4f079e24a3b365553281",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "ce4185fac27d45c5bd7f6a65700e39cc",
      "Inputs": [
        {
          "Id": "150dace50d8e4890b0b1fd3de02d27fa",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f70bdfed7e44da0839f3efae38e979c",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\",\";",
      "Id": "91ec051ad6184e2bb6c511c86d816af5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aad18215d235412cbaa28abf626c5ff6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "IfcGUID",
      "Id": "1ca5cbbbd856415dafb726165455d1d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "179aa63391b74a1fb99f6ac6e1caecfe",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "a373a6c868dd41f5a2fa5b4162799610",
      "Inputs": [
        {
          "Id": "f5a7b0f6b54f4cad9ac1efb294133a69",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "accd874380564f44b5410b96bffcb634",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4eced9c0597f4d7c83acb10a3b57032c",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "2cd4d3a470e0472285b49aa211464739",
      "Inputs": [
        {
          "Id": "da70ced0cd61477e96e1d49d7a46eb5b",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79b13711b0dd4df7848204ccd761916f",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74c7c70110a04da3b2e511c9e7034c2c",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7838c888cafd4cb4adb2bd5e5ad06567",
      "Inputs": [
        {
          "Id": "2caed5d589e64183afd20b3be3ae41f4",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7082ae033e1f4c3ab63bdc4626fea8ea",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d73977a42f145689371cd153a7a4a41",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.BoundingBox",
      "Id": "23bba164882f4d17a7e609ce2899c143",
      "Inputs": [
        {
          "Id": "00d385b126d5450ca5206bf3a014c7dc",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb39f24ca6134a9eae1935079dcd2558",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an Axis-aligned BoundingBox of the Element\n\nElement.BoundingBox: BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7d89926380d94303bbf7d88f5e79f835",
      "Inputs": [
        {
          "Id": "72616d9cdcfa45be9132bf96a42dff4e",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4bd964803e24ef7838d26ce9acde8db",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d85a1d19c87645b8a195d50e51a02321",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3559bb22bfe14627a13c31e8c6cfebc6",
      "Inputs": [
        {
          "Id": "d80647815f0d4b1ab4938ead5a6ec1c3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa65105eacab4577bb8f3fba7f7ccef0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5aa3e02a0eee420d9982f069bedb2500",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "9c4fccb86d9d4cf1ba6fa98c523c3093",
      "Inputs": [
        {
          "Id": "7c79c7b7a22f4fc48a86cc32f90a40e5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba23496ac10149d2b78b5da977d0300e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e203a71976c647648a42dec485e83e5f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "019d964fd35e41a4bd9419a39116ca2a",
      "Inputs": [
        {
          "Id": "776432eaffae41f1b4aa96c0b50d0536",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "946456c3e41c4e19ac7a0c41de177c6f",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e58e32a5f4374cf586a0dbbcef808e95",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.BoundingBox.GetElementsIntersect@Autodesk.DesignScript.Geometry.BoundingBox,Revit.Elements.Element[],double",
      "Id": "328654eb7b61410a9c3d2e84d8153d27",
      "Inputs": [
        {
          "Id": "271f1a703646402e9d33c820713bbe36",
          "Name": "boundingBox",
          "Description": "Input a Bounding Box.\n\nBoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18b0a2dc6aff4c2bbb2df86a974aea9e",
          "Name": "elements",
          "Description": "Input a list of Revit elements.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e36d69f71f84d1785ef5299709b2cec",
          "Name": "tolerance",
          "Description": "Input a distance in active document units to control the match criteria in the geometry comparison. Use positive values to consider gaps, and negative values to consider overlaps.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d5aea2fe79a44439d0ab5f64c5d1eb9",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filter and return Revit elements intersecting or inside a bounding box. Supports Bimorph LinkElements.\r\rUtilizes Revit's QuickFilter class for rapid results. \r\rVisit bimorph.com/bimorph-nodes for support\n\nBoundingBox.GetElementsIntersect (boundingBox: BoundingBox, elements: Element[], tolerance: double = 0): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.BoundingBox",
      "Id": "01299976a4344404a0c6f9992209fd95",
      "Inputs": [
        {
          "Id": "a59dd21917524a638238124f1dd0ca49",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74193791b6b3484d83aa46bb5298a6af",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an Axis-aligned BoundingBox of the Element\n\nElement.BoundingBox: BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "9fa745111d364b739372609a338241ab",
      "Inputs": [
        {
          "Id": "3d072282e00945058fd4469bbe4d42c7",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53838c92d3db487cb8149330ffd6d49d",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b7cbb51216e490690eb2e8a45d4e163",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "282851e498e74542bd2935ed8f668a05",
      "Inputs": [
        {
          "Id": "953cbf6774a741b4bff8656bcd86da7b",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c6caab63c0f4eb6ac8a58eb7c3b4d8e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "762b30730c1946e4b21ace4da9fb634b",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ca9cf023ddb5418685b97383723e46f6",
      "Inputs": [
        {
          "Id": "c096b668f32d4022b729e44985991c5d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d070aab8cf924bbeba1590a2753bb896",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0c20296deac418db36d308b36c16b6c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "273a15b68d9f40c0b6c67cfced7cb183",
      "Inputs": [
        {
          "Id": "eea7682730244aecb99a12e14ce7212b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca37b084d1604c93abf10203c8ebb53d",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "987637e9bf24494dbac08f116cfed4a2",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Elements.Elements.Type@Revit.Elements.Element",
      "Id": "5e7473d2e0b94301a6a5ca38f80dbbd4",
      "Inputs": [
        {
          "Id": "e55df1efc34a429c8603014988ddfeb7",
          "Name": "element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "932dbb07281449ba8497a81b913ee359",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Type.\n\nElements.Type (element: Element): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "bae7fbe9ebc94544a8a07df9b4029a8e",
      "Inputs": [
        {
          "Id": "7632cd15a4574b31aef1b71826285640",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "371691cdd64e40e0a5f581953a321d0d",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "1fce83adff1c4bedb546c5d69592a957",
      "Inputs": [
        {
          "Id": "5e246a583a5a45ff83e7e0552142bd30",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82ff94e13dc74a9a845c4f3b4b31a515",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "927291b96a6a4924b2c90962875be336",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c001d17360a448dcb67140239f8aa25f",
      "Inputs": [
        {
          "Id": "1272955ac0904110b10dbdb6717f921c",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b91d2a087814dffb312c2b2b7fecb0e",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ff70362eb4248f28dc7bd0cf442c1a3",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "76c8ec6c208b4f63a28c0976f44d950c",
      "Inputs": [
        {
          "Id": "1280a0cfc7bf4781804a6fff55941745",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be5d012151b145f4931580953c249aa2",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fe6c3ecd60a4f1c8c903a836be2e018",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 241,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "79313faa3cde4b97b7f5cb6423f9b388",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1828cf3ea5274313ae00fb2fe99ed9de",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "f6f89e660795474c82b888681aa95e77",
      "Inputs": [
        {
          "Id": "359cd0c9d0cf4677b808a425391f6899",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd4ace0e4b8b462ebd4f84304290e3e5",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.BoundingBox.GetElementsIntersect@Autodesk.DesignScript.Geometry.BoundingBox,Revit.Elements.Element[],double",
      "Id": "e4bd703e7c22498f9765562087bc07e3",
      "Inputs": [
        {
          "Id": "0a23472d23554bd99dd3016216ea566e",
          "Name": "boundingBox",
          "Description": "Input a Bounding Box.\n\nBoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f3093df4667475e9c45e78bf98afa8d",
          "Name": "elements",
          "Description": "Input a list of Revit elements.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7c1d061985c437f93687c5afc9f6707",
          "Name": "tolerance",
          "Description": "Input a distance in active document units to control the match criteria in the geometry comparison. Use positive values to consider gaps, and negative values to consider overlaps.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28bd4065f8554db2a24d5a64359685cb",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filter and return Revit elements intersecting or inside a bounding box. Supports Bimorph LinkElements.\r\rUtilizes Revit's QuickFilter class for rapid results. \r\rVisit bimorph.com/bimorph-nodes for support\n\nBoundingBox.GetElementsIntersect (boundingBox: BoundingBox, elements: Element[], tolerance: double = 0): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fba6066c3e5a455d96dde53b4e789a3c",
      "Inputs": [
        {
          "Id": "ba59255087ad4008b46f0e5569ea4e0e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44483f5ed781417e8886e70b9dc5f5a0",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86ea49a86ffd45e8b10da5784cbd076a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc65ec047dec4c38b93185495cf9c8e1",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "acecfed4c416487f8d5caf3e1f5b8221",
      "Inputs": [
        {
          "Id": "47b91cea922f4524b59fe35cda39dfed",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62eee44d3c194ce68b8937109ac5392b",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "289da95112784c4dad16824f4f1b973f",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8262ae0ea6849b9b0fdac10dd5258a3",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Topping",
      "Id": "7909813a02354e75bf8b9d96cc9d6805",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c313954411084a089062608700014c2e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "5ca405ea9aea42e4a37cfdfe075a4143",
      "Inputs": [
        {
          "Id": "1993d71b33394d6bbfa9673fda9b86db",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "961bea07da26422e8f73b71b67fa8923",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a794f7a6e5cf49c19824f602fcb6b5f9",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "4613e715e71c4847adb5ce01188aaacc",
      "Inputs": [
        {
          "Id": "867bdd0a00a54adcbbf11d61cd927e4f",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f59fa25722f0485c8fc689d073b7d64d",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "768c673042354e90a52be2f0e0b572d2",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7de502c4db104df19585036f35c65411",
      "Inputs": [
        {
          "Id": "6fbb1b574b904cc2915aedabb053278e",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28275f95719f44429503bf7e79eba084",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39913224123e4f1d9d61bce9e69e5926",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4166c2ba4014925bcbfbd29ba93572d",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "871a1f4633d24520858858b4cca586e0",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Succeed",
      "Id": "721ffd37b79b4914a3039fd146710ab3",
      "Inputs": [
        {
          "Id": "f30ae02cb1844a0197e0784ce7524230",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "c26f85ecdd084bf2b51782ecf5932216",
      "Inputs": [
        {
          "Id": "c90d74a229bd4682b72cf0fe9679b94b",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f1de536d10246f6a6617a58d9c8cdba",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "directoryOUT",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "97d613f314ac491cadfda944db6d58aa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3cb915018ca04541ba124fc6de3a8210",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "topologyWallInsertsTXT",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "9734483abfbf425a863f4d06b79eeea1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58992fca549a4baca6d9d90627c92fd1",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "topologyWallHostTXT",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "ca91e03d6a09492da0e440a3d4e9a655",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48f210aeb9964f61aadf4cf41dfaeee9",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "topologyWallWallsTXT",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "3e2dafc3f5264cd89f12327310e94974",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aaffa19d6255488faea8bf9a6cbd86a0",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "topologyWallSlabsTXT",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "0dff4ffda0264bc7862ac51a6223c2ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "860620e587bb40588ee4c5fec15e184f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "5fe76f1885c64757af0fd6915639a7c7",
      "End": "ddfb1e4e276246448b8ad49a3b599c86",
      "Id": "c078946832d54bd0a4dfaaaaa27045bf"
    },
    {
      "Start": "0c8f469aee704dde8c420fced999134f",
      "End": "1b8d2b4b82224770a134c17169fabfa7",
      "Id": "209a140155cf4215a8e9d7d84ee4277a"
    },
    {
      "Start": "0cfcda541f2b4866b3debed9bd9dd1e7",
      "End": "4067b454548a4adc9e79baff7f166e89",
      "Id": "778e8ff05912445c84048830773f2985"
    },
    {
      "Start": "0cfcda541f2b4866b3debed9bd9dd1e7",
      "End": "f5a7b0f6b54f4cad9ac1efb294133a69",
      "Id": "85c7a4e6ed2e4fd7a47ba51ca8ca8129"
    },
    {
      "Start": "0cfcda541f2b4866b3debed9bd9dd1e7",
      "End": "2caed5d589e64183afd20b3be3ae41f4",
      "Id": "6b8d840950e84fdda5edc3faefb6adba"
    },
    {
      "Start": "0cfcda541f2b4866b3debed9bd9dd1e7",
      "End": "1993d71b33394d6bbfa9673fda9b86db",
      "Id": "e23c873ce2ed4a869468a33cae05ea8e"
    },
    {
      "Start": "2497524e7b894c1dae53d49609396753",
      "End": "28275f95719f44429503bf7e79eba084",
      "Id": "8bf0128b9e1c4dbc87530a58fb43552d"
    },
    {
      "Start": "fe73e19211a64f96916ad01957211560",
      "End": "9a1db4a3af284ec7b5a6776e10cb576e",
      "Id": "62403e905b2d4047909d42da52e52074"
    },
    {
      "Start": "0faaecdb0b0c4fd2a8787e1ebb3eeb66",
      "End": "f7392e804bdf410c8480e8fb25467fda",
      "Id": "6a55cee6f204495eb8513f9316b15c58"
    },
    {
      "Start": "99073b2c764d45ce801975483356a969",
      "End": "9448b8ec6f08418d8f5ef86638cc7bb2",
      "Id": "6860ef6739d04fdb83114f77a9cbb9fc"
    },
    {
      "Start": "d9b92e65b42f433fb97f92cd446aee90",
      "End": "accd874380564f44b5410b96bffcb634",
      "Id": "a3cd151e69bf4fb3831ed8830c71c52f"
    },
    {
      "Start": "c3321c20df5d4f079e24a3b365553281",
      "End": "150dace50d8e4890b0b1fd3de02d27fa",
      "Id": "1e6d8d9d71d8432ea414c6a8dc33501c"
    },
    {
      "Start": "3f70bdfed7e44da0839f3efae38e979c",
      "End": "bd7e4cb3231f4f76a46a9696e05b319d",
      "Id": "691290f1944449d9baf404a6e392b6b4"
    },
    {
      "Start": "3f70bdfed7e44da0839f3efae38e979c",
      "End": "c40eeaf860854598b71f9b2ad003a6cc",
      "Id": "0f988c9e449543709d2d6ae9d5e3b2ab"
    },
    {
      "Start": "3f70bdfed7e44da0839f3efae38e979c",
      "End": "18b0a2dc6aff4c2bbb2df86a974aea9e",
      "Id": "1bf14f4de4e24c54a9061ba74039dd03"
    },
    {
      "Start": "3f70bdfed7e44da0839f3efae38e979c",
      "End": "00d385b126d5450ca5206bf3a014c7dc",
      "Id": "05f6926c354e4c188a2d0824dd472756"
    },
    {
      "Start": "3f70bdfed7e44da0839f3efae38e979c",
      "End": "a59dd21917524a638238124f1dd0ca49",
      "Id": "bdd3c7eb5fb145cf85220a1bbf7297c7"
    },
    {
      "Start": "aad18215d235412cbaa28abf626c5ff6",
      "End": "f7c27e80cc4d404587d6c9147977865b",
      "Id": "2e11377574bb41a1a8b13d2d5b147242"
    },
    {
      "Start": "aad18215d235412cbaa28abf626c5ff6",
      "End": "72616d9cdcfa45be9132bf96a42dff4e",
      "Id": "bbae2461dfde415d88f2d6b69df2f31e"
    },
    {
      "Start": "aad18215d235412cbaa28abf626c5ff6",
      "End": "3d072282e00945058fd4469bbe4d42c7",
      "Id": "abb715c07bb34c83a6f9558bcb46eb38"
    },
    {
      "Start": "179aa63391b74a1fb99f6ac6e1caecfe",
      "End": "8450877bcde8471283c955b8eb0723d7",
      "Id": "126da0b8d6634972930a395da90dbe51"
    },
    {
      "Start": "179aa63391b74a1fb99f6ac6e1caecfe",
      "End": "9055d31ac1254dd2a87ff12a5cbe1cd5",
      "Id": "b842153ae7a04c26bab25f63be6d47b5"
    },
    {
      "Start": "179aa63391b74a1fb99f6ac6e1caecfe",
      "End": "ba23496ac10149d2b78b5da977d0300e",
      "Id": "24ff930d34044b2883533265bc75f4bc"
    },
    {
      "Start": "179aa63391b74a1fb99f6ac6e1caecfe",
      "End": "ca37b084d1604c93abf10203c8ebb53d",
      "Id": "15243ad6239e48e9ad14e435a1092515"
    },
    {
      "Start": "4eced9c0597f4d7c83acb10a3b57032c",
      "End": "79b13711b0dd4df7848204ccd761916f",
      "Id": "b811556137d74c69bda751f0eed74f40"
    },
    {
      "Start": "74c7c70110a04da3b2e511c9e7034c2c",
      "End": "6fbb1b574b904cc2915aedabb053278e",
      "Id": "ff8d827c37fb422383f28e92ccb7fe30"
    },
    {
      "Start": "2d73977a42f145689371cd153a7a4a41",
      "End": "946456c3e41c4e19ac7a0c41de177c6f",
      "Id": "bd6dcf2caabc418cb3f29546acadc711"
    },
    {
      "Start": "eb39f24ca6134a9eae1935079dcd2558",
      "End": "271f1a703646402e9d33c820713bbe36",
      "Id": "cfcaa43fbb6c461a99274b282193f57e"
    },
    {
      "Start": "d85a1d19c87645b8a195d50e51a02321",
      "End": "d80647815f0d4b1ab4938ead5a6ec1c3",
      "Id": "5cbbbdb4267a434dbf0dba0b6066ed96"
    },
    {
      "Start": "5aa3e02a0eee420d9982f069bedb2500",
      "End": "7082ae033e1f4c3ab63bdc4626fea8ea",
      "Id": "cb916fc5d9f847f18a06e1e93fcaf2d4"
    },
    {
      "Start": "e203a71976c647648a42dec485e83e5f",
      "End": "b4bd964803e24ef7838d26ce9acde8db",
      "Id": "a2a6e13b9ac147de8611f66321d422b7"
    },
    {
      "Start": "e58e32a5f4374cf586a0dbbcef808e95",
      "End": "39913224123e4f1d9d61bce9e69e5926",
      "Id": "72e9384de7cf400294126d6fca114146"
    },
    {
      "Start": "6d5aea2fe79a44439d0ab5f64c5d1eb9",
      "End": "7c79c7b7a22f4fc48a86cc32f90a40e5",
      "Id": "bdc8de8438444fb58bbe37f29b989df1"
    },
    {
      "Start": "74193791b6b3484d83aa46bb5298a6af",
      "End": "0a23472d23554bd99dd3016216ea566e",
      "Id": "49a095be2c1341939e6983395c7191c2"
    },
    {
      "Start": "2b7cbb51216e490690eb2e8a45d4e163",
      "End": "c096b668f32d4022b729e44985991c5d",
      "Id": "f9ad2c23b60a40b7a5605cdd42e297b1"
    },
    {
      "Start": "762b30730c1946e4b21ace4da9fb634b",
      "End": "da70ced0cd61477e96e1d49d7a46eb5b",
      "Id": "4a490cae292a4aab8c2bd0e976800e64"
    },
    {
      "Start": "c0c20296deac418db36d308b36c16b6c",
      "End": "961bea07da26422e8f73b71b67fa8923",
      "Id": "5231f5e4351a4cc6b9b215661ffa89f7"
    },
    {
      "Start": "987637e9bf24494dbac08f116cfed4a2",
      "End": "53838c92d3db487cb8149330ffd6d49d",
      "Id": "5d0f90de99694f01aad4d866600c8689"
    },
    {
      "Start": "932dbb07281449ba8497a81b913ee359",
      "End": "7632cd15a4574b31aef1b71826285640",
      "Id": "3ba1aaf0cf0e4e9d9419627281ddac4e"
    },
    {
      "Start": "371691cdd64e40e0a5f581953a321d0d",
      "End": "47b91cea922f4524b59fe35cda39dfed",
      "Id": "9be7a23256844e5cb41025eacfd7a511"
    },
    {
      "Start": "927291b96a6a4924b2c90962875be336",
      "End": "776432eaffae41f1b4aa96c0b50d0536",
      "Id": "80e1fbe8e00447ee8943aa2f889cfd30"
    },
    {
      "Start": "8ff70362eb4248f28dc7bd0cf442c1a3",
      "End": "c615aacf09ef477b9120698e07c0e0ce",
      "Id": "e914d2d76a734b0aaf857604c5339229"
    },
    {
      "Start": "2fe6c3ecd60a4f1c8c903a836be2e018",
      "End": "867bdd0a00a54adcbbf11d61cd927e4f",
      "Id": "543fcb33c81c463e854d86b98c530af3"
    },
    {
      "Start": "1828cf3ea5274313ae00fb2fe99ed9de",
      "End": "359cd0c9d0cf4677b808a425391f6899",
      "Id": "c71cbb813ffa443ab77c83e829b31eef"
    },
    {
      "Start": "cd4ace0e4b8b462ebd4f84304290e3e5",
      "End": "e55df1efc34a429c8603014988ddfeb7",
      "Id": "b9aba243a5864635af04bfd525b4ad33"
    },
    {
      "Start": "cd4ace0e4b8b462ebd4f84304290e3e5",
      "End": "ba59255087ad4008b46f0e5569ea4e0e",
      "Id": "d664c6c76ca3489ca13d978c4bac283b"
    },
    {
      "Start": "28bd4065f8554db2a24d5a64359685cb",
      "End": "eea7682730244aecb99a12e14ce7212b",
      "Id": "d13dc7b3e87f46f6a776f392095bafac"
    },
    {
      "Start": "bc65ec047dec4c38b93185495cf9c8e1",
      "End": "6f3093df4667475e9c45e78bf98afa8d",
      "Id": "9f6488d2c67d4d9985b0abb16ad24a10"
    },
    {
      "Start": "c8262ae0ea6849b9b0fdac10dd5258a3",
      "End": "44483f5ed781417e8886e70b9dc5f5a0",
      "Id": "ba05159ea0d14dacb9286eadd78f3337"
    },
    {
      "Start": "c313954411084a089062608700014c2e",
      "End": "62eee44d3c194ce68b8937109ac5392b",
      "Id": "dadf16aad55440c59a564481c0740fc2"
    },
    {
      "Start": "a794f7a6e5cf49c19824f602fcb6b5f9",
      "End": "f59fa25722f0485c8fc689d073b7d64d",
      "Id": "5851d881348c4674a126f12f4c5db22a"
    },
    {
      "Start": "768c673042354e90a52be2f0e0b572d2",
      "End": "b4166c2ba4014925bcbfbd29ba93572d",
      "Id": "b80bd8c0593a435cb83d946e403ffe97"
    },
    {
      "Start": "871a1f4633d24520858858b4cca586e0",
      "End": "c90d74a229bd4682b72cf0fe9679b94b",
      "Id": "9bc9da67f7d14756b58aed602c616d98"
    },
    {
      "Start": "1f1de536d10246f6a6617a58d9c8cdba",
      "End": "f30ae02cb1844a0197e0784ce7524230",
      "Id": "8a8ccb01e7cd4379a64e1d58a0e37944"
    },
    {
      "Start": "3cb915018ca04541ba124fc6de3a8210",
      "End": "953cbf6774a741b4bff8656bcd86da7b",
      "Id": "ca78a826f0b34c29b0ac04f051b85cda"
    },
    {
      "Start": "3cb915018ca04541ba124fc6de3a8210",
      "End": "1272955ac0904110b10dbdb6717f921c",
      "Id": "5b1111c3ee2f451f8a695bdf889cb66d"
    },
    {
      "Start": "3cb915018ca04541ba124fc6de3a8210",
      "End": "5e246a583a5a45ff83e7e0552142bd30",
      "Id": "a009e5019d0a461db8064e0cd6af18f4"
    },
    {
      "Start": "3cb915018ca04541ba124fc6de3a8210",
      "End": "1280a0cfc7bf4781804a6fff55941745",
      "Id": "c33dd2c74cca44c9a36325c86e880309"
    },
    {
      "Start": "58992fca549a4baca6d9d90627c92fd1",
      "End": "0c6caab63c0f4eb6ac8a58eb7c3b4d8e",
      "Id": "430189cff3354a94910ebebbb18ce2af"
    },
    {
      "Start": "48f210aeb9964f61aadf4cf41dfaeee9",
      "End": "9b91d2a087814dffb312c2b2b7fecb0e",
      "Id": "2f9d7b85cd904a3ba35e8b48a91f8299"
    },
    {
      "Start": "aaffa19d6255488faea8bf9a6cbd86a0",
      "End": "82ff94e13dc74a9a845c4f3b4b31a515",
      "Id": "bb24a04cea1e41078f4e6edd5e646060"
    },
    {
      "Start": "860620e587bb40588ee4c5fec15e184f",
      "End": "be5d012151b145f4931580953c249aa2",
      "Id": "23f6605596994f1d8bed3137d832d88e"
    }
  ],
  "Dependencies": [
    "bc5b8366-c225-4166-a8ed-a3b20817c8e2"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "e37431da82414009ad5479181f382e54"
      ]
    },
    {
      "Name": "bimorphNodes",
      "Version": "4.1.2",
      "ReferenceType": "Package",
      "Nodes": [
        "328654eb7b61410a9c3d2e84d8153d27",
        "e4bd703e7c22498f9765562087bc07e3"
      ]
    },
    {
      "Name": "archi-lab.net",
      "Version": "2022.210.1022",
      "ReferenceType": "Package",
      "Nodes": [
        "5e7473d2e0b94301a6a5ca38f80dbbd4"
      ]
    }
  ],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Element.Inserts",
        "Id": "e37431da82414009ad5479181f382e54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2459.6665402305052,
        "Y": 438.13121309025064
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "113ca46ca6064069bdc1424513c01320",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2900.6814656036349,
        "Y": 438.13121309025064
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6fef3fad16944fcfb1ffb41d3c181888",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2438.9703029113944,
        "Y": 745.93452990870571
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "1f26068dfb8f40cea8ac70c9737e4644",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3118.9703029113944,
        "Y": 838.81293786890581
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "69c75387f9a24c239956c8c56416956b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2438.9703029113944,
        "Y": 854.02408214750574
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "22b9bffe9b4a4ebaad48550c8c84d18c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2801.895676045724,
        "Y": 784.872639361436
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "82b16451618c4b5096041eb3d25100c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3263.6068387379655,
        "Y": 412.13121309025064
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "40ded8e1d70042f382d5f7206a787816",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3580.6814656036349,
        "Y": 412.13121309025064
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "e038a1b6ce00485097c85147374331a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1897.1455925067164,
        "Y": -30.463941844473595
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "ce4185fac27d45c5bd7f6a65700e39cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2163.3545477305961,
        "Y": -30.463941844473595
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91ec051ad6184e2bb6c511c86d816af5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2714.1483798892341,
        "Y": 1041.003516431666
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1ca5cbbbd856415dafb726165455d1d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2144.1502789462666,
        "Y": 98.4713644120065
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "a373a6c868dd41f5a2fa5b4162799610",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3862.6516148573655,
        "Y": 386.13121309025064
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "2cd4d3a470e0472285b49aa211464739",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4179.726241723045,
        "Y": 307.13121309025064
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "7838c888cafd4cb4adb2bd5e5ad06567",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4126.2932440127788,
        "Y": 1272.452148370654
      },
      {
        "ShowGeometry": true,
        "Name": "Element.BoundingBox",
        "Id": "23bba164882f4d17a7e609ce2899c143",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2454.9499604306889,
        "Y": 1324.452148370654
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "7d89926380d94303bbf7d88f5e79f835",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3527.2484678933788,
        "Y": 1298.452148370654
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3559bb22bfe14627a13c31e8c6cfebc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3844.3230947590491,
        "Y": 1298.452148370654
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "9c4fccb86d9d4cf1ba6fa98c523c3093",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3164.3230947590491,
        "Y": 1324.452148370654
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "019d964fd35e41a4bd9419a39116ca2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4443.3678708784591,
        "Y": 1195.3627015703914
      },
      {
        "ShowGeometry": true,
        "Name": "BoundingBox.GetElementsIntersect",
        "Id": "328654eb7b61410a9c3d2e84d8153d27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2805.6962290874089,
        "Y": 1324.452148370654
      },
      {
        "ShowGeometry": true,
        "Name": "Element.BoundingBox",
        "Id": "01299976a4344404a0c6f9992209fd95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3929.7013201100408,
        "Y": 1628.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "9fa745111d364b739372609a338241ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5001.99982757272,
        "Y": 1657.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "282851e498e74542bd2935ed8f668a05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1849.3384985448238,
        "Y": 469.82587042276589
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "ca9cf023ddb5418685b97383723e46f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5319.0744544384006,
        "Y": 1657.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "273a15b68d9f40c0b6c67cfced7cb183",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4639.0744544384006,
        "Y": 1683.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "Elements.Type",
        "Id": "5e7473d2e0b94301a6a5ca38f80dbbd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2998.5371410055604,
        "Y": 1722.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "bae7fbe9ebc94544a8a07df9b4029a8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3317.0446036921312,
        "Y": 1722.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "1fce83adff1c4bedb546c5d69592a957",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1849.3384985448238,
        "Y": 1358.0573589029066
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "c001d17360a448dcb67140239f8aa25f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1849.3384985448238,
        "Y": 1001.5075952014211
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "76c8ec6c208b4f63a28c0976f44d950c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1849.3384985448238,
        "Y": 1724.3671792324246
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "79313faa3cde4b97b7f5cb6423f9b388",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2458.238633542871,
        "Y": 1730.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "f6f89e660795474c82b888681aa95e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2724.4475887667504,
        "Y": 1730.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "BoundingBox.GetElementsIntersect",
        "Id": "e4bd703e7c22498f9765562087bc07e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4280.44758876675,
        "Y": 1683.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "fba6066c3e5a455d96dde53b4e789a3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3929.7013201100408,
        "Y": 1738.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "acecfed4c416487f8d5caf3e1f5b8221",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3620.507290259291,
        "Y": 1764.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7909813a02354e75bf8b9d96cc9d6805",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3317.0446036921312,
        "Y": 1832.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "5ca405ea9aea42e4a37cfdfe075a4143",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5601.04460369213,
        "Y": 1631.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "4613e715e71c4847adb5ce01188aaacc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5918.1192305578006,
        "Y": 1561.6725218999095
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "7de502c4db104df19585036f35c65411",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5374.1750490404747,
        "Y": 906.71082640233067
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "721ffd37b79b4914a3039fd146710ab3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5857.876541577788,
        "Y": 906.71082640233067
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllTrue",
        "Id": "c26f85ecdd084bf2b51782ecf5932216",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5594.5332579956985,
        "Y": 906.71082640233067
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "97d613f314ac491cadfda944db6d58aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.5176030224357,
        "Y": 1179.7824770521636
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "9734483abfbf425a863f4d06b79eeea1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.5176030224357,
        "Y": 495.82587042276589
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "ca91e03d6a09492da0e440a3d4e9a655",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.5176030224357,
        "Y": 1027.5075952014211
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "3e2dafc3f5264cd89f12327310e94974",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.5176030224357,
        "Y": 1384.0573589029066
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0dff4ffda0264bc7862ac51a6223c2ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.5176030224357,
        "Y": 1750.3671792324246
      }
    ],
    "Annotations": [
      {
        "Id": "c8b2563e35c14a46b89e064e0bba819f",
        "Title": "hosts (walls)",
        "Nodes": [
          "6fef3fad16944fcfb1ffb41d3c181888",
          "1f26068dfb8f40cea8ac70c9737e4644",
          "69c75387f9a24c239956c8c56416956b",
          "22b9bffe9b4a4ebaad48550c8c84d18c",
          "91ec051ad6184e2bb6c511c86d816af5"
        ],
        "Left": 2428.9703029113944,
        "Top": 692.94945528184007,
        "Width": 891.283582089552,
        "Height": 416.06898652296013,
        "FontSize": 36.0,
        "InitialTop": 745.93452990870571,
        "InitialHeight": 440.06898652296024,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "463a7b1730d24eb5a77eb98a9fc6a6eb",
        "Title": "Wall as Core connections.\r\n",
        "Nodes": [
          "e038a1b6ce00485097c85147374331a4",
          "ce4185fac27d45c5bd7f6a65700e39cc",
          "1ca5cbbbd856415dafb726165455d1d7"
        ],
        "Left": 1887.1455925067164,
        "Top": -127.1505090086527,
        "Width": 460.29850746268562,
        "Height": 293.63679879379356,
        "FontSize": 36.0,
        "InitialTop": -30.463941844473595,
        "InitialHeight": 273.93530625648009,
        "TextblockHeight": 86.68656716417911,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "46083891fa9e4aac8db01033e6cc26b2",
        "Title": "followers (doors and windows embedded in walls)",
        "Nodes": [
          "e37431da82414009ad5479181f382e54",
          "113ca46ca6064069bdc1424513c01320",
          "82b16451618c4b5096041eb3d25100c2",
          "40ded8e1d70042f382d5f7206a787816",
          "2cd4d3a470e0472285b49aa211464739",
          "a373a6c868dd41f5a2fa5b4162799610"
        ],
        "Left": 2449.6665402305052,
        "Top": 254.14613846338497,
        "Width": 1931.3432835820922,
        "Height": 380.2388059701492,
        "FontSize": 36.0,
        "InitialTop": 307.13121309025064,
        "InitialHeight": 276.0,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b05d7949739f46129a022e10a7bad41f",
        "Title": "connectors (walls - walls)",
        "Nodes": [
          "23bba164882f4d17a7e609ce2899c143",
          "7d89926380d94303bbf7d88f5e79f835",
          "3559bb22bfe14627a13c31e8c6cfebc6",
          "7838c888cafd4cb4adb2bd5e5ad06567",
          "019d964fd35e41a4bd9419a39116ca2a",
          "328654eb7b61410a9c3d2e84d8153d27",
          "9c4fccb86d9d4cf1ba6fa98c523c3093"
        ],
        "Left": 2444.9499604306889,
        "Top": 1142.3776269435257,
        "Width": 2199.7014925373228,
        "Height": 326.746163218173,
        "FontSize": 36.0,
        "InitialTop": 1195.3627015703914,
        "InitialHeight": 274.08944680026252,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fcc0b2ceb54841218e0bab9015ab3041",
        "Title": "Input.\r\n\r\n",
        "Nodes": [
          "282851e498e74542bd2935ed8f668a05",
          "1fce83adff1c4bedb546c5d69592a957",
          "c001d17360a448dcb67140239f8aa25f",
          "76c8ec6c208b4f63a28c0976f44d950c",
          "97d613f314ac491cadfda944db6d58aa",
          "3e2dafc3f5264cd89f12327310e94974",
          "9734483abfbf425a863f4d06b79eeea1",
          "ca91e03d6a09492da0e440a3d4e9a655",
          "0dff4ffda0264bc7862ac51a6223c2ff"
        ],
        "Left": 1415.5176030224357,
        "Top": 330.15422863172114,
        "Width": 643.7014925373137,
        "Height": 1513.0935476156287,
        "FontSize": 36.0,
        "InitialTop": 469.82587042276589,
        "InitialHeight": 1425.5413088096589,
        "TextblockHeight": 129.67164179104478,
        "Background": "#FFFFFFFF"
      },
      {
        "Id": "959c812b26a84413a11799a21733fa99",
        "Title": "floors (floors connected to walls)",
        "Nodes": [
          "79313faa3cde4b97b7f5cb6423f9b388",
          "f6f89e660795474c82b888681aa95e77",
          "9fa745111d364b739372609a338241ab",
          "ca9cf023ddb5418685b97383723e46f6",
          "5ca405ea9aea42e4a37cfdfe075a4143",
          "273a15b68d9f40c0b6c67cfced7cb183",
          "e4bd703e7c22498f9765562087bc07e3",
          "01299976a4344404a0c6f9992209fd95",
          "5e7473d2e0b94301a6a5ca38f80dbbd4",
          "bae7fbe9ebc94544a8a07df9b4029a8e",
          "4613e715e71c4847adb5ce01188aaacc",
          "acecfed4c416487f8d5caf3e1f5b8221",
          "7909813a02354e75bf8b9d96cc9d6805",
          "fba6066c3e5a455d96dde53b4e789a3c"
        ],
        "Left": 2448.238633542871,
        "Top": 1508.6874472730437,
        "Width": 3671.1641791044822,
        "Height": 400.6567164179105,
        "FontSize": 36.0,
        "InitialTop": 1561.6725218999095,
        "InitialHeight": 416.0,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "14b14b822b2449e5bf57fa461955398b",
        "Title": "OUT",
        "Nodes": [
          "7de502c4db104df19585036f35c65411",
          "721ffd37b79b4914a3039fd146710ab3",
          "c26f85ecdd084bf2b51782ecf5932216"
        ],
        "Left": 5364.1750490404747,
        "Top": 853.725751775465,
        "Width": 613.313432835821,
        "Height": 198.37313432835811,
        "FontSize": 36.0,
        "InitialTop": 906.71082640233067,
        "InitialHeight": 145.0,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFB5B5B5"
      }
    ],
    "X": -68.183801338767182,
    "Y": -6.97559631260998,
    "Zoom": 0.39769604678405712
  }
}