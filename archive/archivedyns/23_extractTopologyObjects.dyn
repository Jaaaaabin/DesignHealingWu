{
  "Uuid": "f7b90e20-e42e-472a-8c79-e02c440647af",
  "IsCustomNode": false,
  "Description": "",
  "Name": "23_extractTopologyObjects",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "357f397eb50f411aa960ef99015be17d",
      "Inputs": [
        {
          "Id": "feaa1d706ee44fb2841e8c1496109bed",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "909091fdcdad4db29e59ebebb281fca7",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f68b009829ce4334ad9b540f76216df6",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "bc5b8366-c225-4166-a8ed-a3b20817c8e2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9c358dc1d5634d20815c4bc0c51b7640",
      "Inputs": [
        {
          "Id": "c107651291484fcc999d86b1527a33be",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc682b380f1f4375af07bb8194876001",
          "Name": "includeOpenings",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f1eecb5186d4b5f8c410de03866a5e1",
          "Name": "includeShadows",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "879130bb05bb48c1955197eb08e15110",
          "Name": "includeEmbeddedWalls",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c487234ec864c8a83f4bddfb8f3aabc",
          "Name": "includeSharedEmbeddedInserts",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6ffaf57f7794f42acb7dccef4d8a544",
          "Name": "inserts",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all the objects inserted into a given element."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 686,
      "SelectedString": "OST_Walls",
      "NodeType": "ExtensionNode",
      "Id": "71a8571f764a4449bfa8368196af4702",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "12cddc33c7b34440b33e1fe72df3d790",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "216ff9442fe14cd2ba381426da48682b",
      "Inputs": [
        {
          "Id": "80c184da8c3948e68cc743dcea48ab84",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67251ef5f0f94ad6981bfc9497208a4f",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "354a5f1330cb4b7bac16fd1e5d5200ba",
      "Inputs": [
        {
          "Id": "9371ba372d944621b523a2104295eca3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7e5afaede8244426b36d902152c40afb",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b9e566591b44f3aad1ad9be79e375b9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "c044ca81a2f641d8bd135e9def6fa451",
      "Inputs": [
        {
          "Id": "ab4c376a411947108030206e5f699cf9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92371e9ba66f425ab6ef2615f8c2727c",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "717f7b3e73cd4118b09d1c1af7d766c7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "IfcGUID",
      "Id": "be72d3dd222a4e6891130584bec8f710",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c89da5d1646e4074967189957d18faa9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "afab2653f1474a8c816dc0aa6ee4a567",
      "Inputs": [
        {
          "Id": "a8c84cb910e9494987d916c9189e5a53",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "725bb1a24a1040389d5fe5b93085802e",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "933ce1f7dab0433192b93504fe774180",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\",\";",
      "Id": "dcc8413f71fa452285a31f37db0d8576",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a5d3535a3464c6a89243aa44214759f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "243abfe6c8dc4fb986668326102dffad",
      "Inputs": [
        {
          "Id": "4a3b29865ac745a6bd571e2db049580e",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5edef2954c54370a395156bd0a50b99",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f5886d645d46ae9a0e1475c271af63",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "506a1e6fafe64fb6a716a17e96f61adb",
      "Inputs": [
        {
          "Id": "88a2cf7e1b214cc2ab5b3dffb3d40c6b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7992541b5e8a42669540d8b77e590663",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0969c26edac247bba2b280dee83a43b7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "88d030de9cab499f8c46f9a3b01a0f3a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c313aca0ec94364a07f9afec10e45b4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "24f1dc232140468687a3f7e93ab23183",
      "Inputs": [
        {
          "Id": "0c0e96fa8abb4f14a1a3771da4e94d91",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1919e5ae2aed45108ce327c002194cd2",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d2f6566889d432186fbaf3050f37078",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f4e55996bf3e47dd97c96247bb244de5",
      "Inputs": [
        {
          "Id": "e7709e46108f41b2bd7de2c2176c97ef",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "923a7f8c6c554126b4640aff8f71e5b9",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c4f80708f344e3398d8a89b8bd0753c",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.BoundingBox",
      "Id": "b18348313b334a7ba27bd80b72c06c05",
      "Inputs": [
        {
          "Id": "7924072f1bce41f584943c17bc735268",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfc593bb21544e7f8028b746ec7bf85a",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an Axis-aligned BoundingBox of the Element\n\nElement.BoundingBox: BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.BoundingBox.GetElementsIntersect@Autodesk.DesignScript.Geometry.BoundingBox,Revit.Elements.Element[],double",
      "Id": "5ddea6ac24054441bfc488278352efb1",
      "Inputs": [
        {
          "Id": "da7f55d6027f49edb95dc9f5dcd13c35",
          "Name": "boundingBox",
          "Description": "Input a Bounding Box.\n\nBoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "292203e618624d85a5aa17d376a3794a",
          "Name": "elements",
          "Description": "Input a list of Revit elements.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "544da774850a46e0b66c7e9fd50c453f",
          "Name": "tolerance",
          "Description": "Input a distance in active document units to control the match criteria in the geometry comparison. Use positive values to consider gaps, and negative values to consider overlaps.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a532e6695c34696bba0827e21b1a870",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filter and return Revit elements intersecting or inside a bounding box. Supports Bimorph LinkElements.\r\rUtilizes Revit's QuickFilter class for rapid results. \r\rVisit bimorph.com/bimorph-nodes for support\n\nBoundingBox.GetElementsIntersect (boundingBox: BoundingBox, elements: Element[], tolerance: double = 0): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ef0383e4530c41b4accc5ea35d7e8622",
      "Inputs": [
        {
          "Id": "81d9a881aef24408bd7beef91b41c27d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ff03c3fb68c48b7afab8de59396c4bf",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "726b103d54ba45c2aabcf61b02d8a37c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "58f996e70007404da1e9313f817afde0",
      "Inputs": [
        {
          "Id": "388ca8bc7e9944a8bb95520a22c3e570",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d426f9dc94e64826b7625a4192577721",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7c379567bbf48ee9b26657669c00ae1",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "81da476492b1494a90de0e29bb193449",
      "Inputs": [
        {
          "Id": "3136bdb69a1f42eda2540151c50e07ac",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f816a65b0cf14d92ada009e491504e9a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01a4cd5326854bd294a2a993889d88b5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "14947e629abe4413978543b848b82e27",
      "Inputs": [
        {
          "Id": "4cf04a409dd1461ebe4c77051ab346f1",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e0e7a2242f549d79de6b12ebc3ebfb6",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85c5b4b196ff4dfb9624681ed5860a2c",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "4a8f0b894f8441a18662735d5024e091",
      "Inputs": [
        {
          "Id": "88926de6cb4548f297e11b2afa8738d4",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19fe24ec104243c5b697f1be81cff502",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa94c550dd314106b6a5ea18c0a00ecc",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 241,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "72aeb44550e64d73b2123ecca2ac06c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94fa69ce98b14b82b02ab1d92df7ed2f",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "ca83df76bc9346eb8ea4844ae60489a8",
      "Inputs": [
        {
          "Id": "43fd6fde98114965ab84da09cbc4fd37",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35c16f2e2e204e7397619daf48ca68f2",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "673918b226a94f37b1ce9cf5fccde7bb",
      "Inputs": [
        {
          "Id": "a9dd9ca0335c4d4aa0fce53b7f9ed424",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff50c9616084418994f2737e6014f1a2",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c74ec41e43814437b68cc9025e62cf19",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "87caea0d62ee4cbf8a96131399060ee0",
      "Inputs": [
        {
          "Id": "4b45a5159667488fa6f67db8b010c06a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb5bc0f65ee3400194defe3f4369629b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b307fd1e7ae74353abd61fe8b01c4c56",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "353f3b5f52754bf7a12149d9b896c8f6",
      "Inputs": [
        {
          "Id": "ee511b6ef01247f8a951593b14ecd8be",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2131a1af8cc44c49872b5b8315db0e4",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "336cce94f66a43ddb77062546d897082",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "f2ba184864214f33baa0095f58a0da6c",
      "Inputs": [
        {
          "Id": "6a7df0c9141a422987f13f2f00f8ac14",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6f284c99d5c4dc9bd817e990c32cca8",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ea2f824f86b477b986e2258b41bde79",
          "Name": "void",
          "Description": "No output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ef406eefc0c24a688154094061485ead",
      "Inputs": [
        {
          "Id": "e8d10d812d7440c898484de402f6a227",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "faec13a802b34428b5b242bd3b07872f",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36213ee8a82648fc81c610d90d6777c1",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.BoundingBox.GetElementsIntersect@Autodesk.DesignScript.Geometry.BoundingBox,Revit.Elements.Element[],double",
      "Id": "92844d58d62341afae4d140a2bae72d4",
      "Inputs": [
        {
          "Id": "d078e5a8de5342ab906f665eae707913",
          "Name": "boundingBox",
          "Description": "Input a Bounding Box.\n\nBoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "781af1ec94694f149308afa9044f4ec4",
          "Name": "elements",
          "Description": "Input a list of Revit elements.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4928fd785fba4fa5bddc5fe73059e82a",
          "Name": "tolerance",
          "Description": "Input a distance in active document units to control the match criteria in the geometry comparison. Use positive values to consider gaps, and negative values to consider overlaps.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6402ab54fe8411a8613e5f61f83edeb",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filter and return Revit elements intersecting or inside a bounding box. Supports Bimorph LinkElements.\r\rUtilizes Revit's QuickFilter class for rapid results. \r\rVisit bimorph.com/bimorph-nodes for support\n\nBoundingBox.GetElementsIntersect (boundingBox: BoundingBox, elements: Element[], tolerance: double = 0): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.BoundingBox",
      "Id": "c5da75b98dfc48bb891d19503b911c2b",
      "Inputs": [
        {
          "Id": "857a9efe5d39419997606e479c2bdd12",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d366c0db1c9f4855be056b871ef30718",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an Axis-aligned BoundingBox of the Element\n\nElement.BoundingBox: BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Elements.Elements.Type@Revit.Elements.Element",
      "Id": "1d45961dc47745078d30982cd5b5ee79",
      "Inputs": [
        {
          "Id": "24e8622440c048c992becc28cf27d337",
          "Name": "element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "826ed50ae6eb4134b69c9cda8930c6ba",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Type.\n\nElements.Type (element: Element): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "a59a4037093946f4a75958de6e190466",
      "Inputs": [
        {
          "Id": "b2ef0c377d714f6e8003535a0fee3c9c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c436929cbc54f1db8f8cc0728de2588",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "5423dbea5bfc400f90ed73c8da92dc18",
      "Inputs": [
        {
          "Id": "723808ec5aaf4826821c0dc72a5e666e",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96a66f430f7a46db8b4a1fccd39824d1",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0b6c766429b4fb89604b1d378ad14f4",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8df20bb2327b446e97847c60a9e3fe30",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Topping",
      "Id": "be92b8f4ea25438f9ee0400a009dd1ea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "51bdf9ed0f8c4bcf98c36f8a9eeb6dff",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "0b03e9ac6b7e4eac93354910eaf97d08",
      "Inputs": [
        {
          "Id": "1168f12095ee4563bc6c60f287d1e5ae",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54df72a8c9c2484195bf0fa0bab3622d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "241ee3cfbf904987b04bae3e71750c24",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b42880dc13844dee95091fb5f4c994d9",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f14ef7e542014ef889a24595b6c7e0a2",
      "Inputs": [
        {
          "Id": "e18937faf1e8442e9f2c4f5ab1340d27",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df3cf3c52f554d6aa5ad43d9adf884b4",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "120d16eeedc5463986e5fce6e4b84aca",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "collected_topology_wall_inserts.txt",
      "Id": "a2e66b9f5add4390ad74127ed1886518",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d53da644f8634977ac432d5a98841441",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "C:\\dev\\phd\\jw\\healing\\data\\healing2023\\20_extract_data\\res\\",
      "Id": "ff07ea1615cc47c3a576b5c01905c453",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "144ee75c9c2b4b52ac84e00daeb85c3b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "collected_topology_wall_host.txt",
      "Id": "80a36d2a768240f9b0621abd386a5093",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a947326c0fd4ab592d3a28e023f54ba",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "collected_topology_wall_walls.txt",
      "Id": "636aed7b752f41b78f7233a16df63a78",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eaa7bc80839c4bb0938e268649113610",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "a60f5389a9534b8ba58afb0ebfee73d5",
      "Inputs": [
        {
          "Id": "af9bc50badcb423fb9acef8a713e29be",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c5d2fa85611440c8a638dae14d8d2cd",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8d083bff98e45348161b2b0553fb0cd",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "79b6b5bc5b644bdbb33fb8286d0b56a3",
      "Inputs": [
        {
          "Id": "41d995ec182041ec8c9614c2219201e5",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3eb8744c12b4879a6488e6369acb75f",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9793c959b4714bc995fb8aecc9a0b634",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "collected_topology_wall_slabs.txt",
      "Id": "88fdc54deebb443397ab6e135f6c1996",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fab2231aa45b4efd9cf263571dfdf783",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "54865b4f03e84f059ee1bda880bb7046",
      "Inputs": [
        {
          "Id": "1e23c38453e94cc5a623e935a2af60fa",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf90ec61c5354e43838d2fb6b40bb9c4",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c50c5a8e5e92477c968ba86f7c6bec96",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    }
  ],
  "Connectors": [
    {
      "Start": "b6ffaf57f7794f42acb7dccef4d8a544",
      "End": "ab4c376a411947108030206e5f699cf9",
      "Id": "bca7eafff683488c8e9dec05dfe6d738"
    },
    {
      "Start": "12cddc33c7b34440b33e1fe72df3d790",
      "End": "80c184da8c3948e68cc743dcea48ab84",
      "Id": "621fff987e4a4d83a7f812618fae6d40"
    },
    {
      "Start": "67251ef5f0f94ad6981bfc9497208a4f",
      "End": "c107651291484fcc999d86b1527a33be",
      "Id": "964957024d0e4f28ae507bad32405b1f"
    },
    {
      "Start": "67251ef5f0f94ad6981bfc9497208a4f",
      "End": "9371ba372d944621b523a2104295eca3",
      "Id": "d1fecf1e94b54b428cf344bef05a365a"
    },
    {
      "Start": "67251ef5f0f94ad6981bfc9497208a4f",
      "End": "292203e618624d85a5aa17d376a3794a",
      "Id": "2c1e0c7f9f3141a18b8c6e24b251a5f8"
    },
    {
      "Start": "67251ef5f0f94ad6981bfc9497208a4f",
      "End": "7924072f1bce41f584943c17bc735268",
      "Id": "9b00f070a62c41758f16894398969d1c"
    },
    {
      "Start": "67251ef5f0f94ad6981bfc9497208a4f",
      "End": "857a9efe5d39419997606e479c2bdd12",
      "Id": "7ddcde4a160a447393ea65b462559367"
    },
    {
      "Start": "4b9e566591b44f3aad1ad9be79e375b9",
      "End": "725bb1a24a1040389d5fe5b93085802e",
      "Id": "23526e706bf64ee3ae6fcc15f8422d9c"
    },
    {
      "Start": "717f7b3e73cd4118b09d1c1af7d766c7",
      "End": "a5edef2954c54370a395156bd0a50b99",
      "Id": "4d14fbec81484d30b79092371d8de817"
    },
    {
      "Start": "c89da5d1646e4074967189957d18faa9",
      "End": "7e5afaede8244426b36d902152c40afb",
      "Id": "c315d037b39f4c49b38d003ef3aadad5"
    },
    {
      "Start": "c89da5d1646e4074967189957d18faa9",
      "End": "92371e9ba66f425ab6ef2615f8c2727c",
      "Id": "c379fb1f18ea426e96d200d90bb9b568"
    },
    {
      "Start": "c89da5d1646e4074967189957d18faa9",
      "End": "6ff03c3fb68c48b7afab8de59396c4bf",
      "Id": "8e20b367f12344c9a64d4d6f98ab303c"
    },
    {
      "Start": "c89da5d1646e4074967189957d18faa9",
      "End": "faec13a802b34428b5b242bd3b07872f",
      "Id": "3b038f3b71d4491b8c4e686a1f63ced5"
    },
    {
      "Start": "933ce1f7dab0433192b93504fe774180",
      "End": "909091fdcdad4db29e59ebebb281fca7",
      "Id": "c2870155f2434de998d449cba199654f"
    },
    {
      "Start": "1a5d3535a3464c6a89243aa44214759f",
      "End": "4a3b29865ac745a6bd571e2db049580e",
      "Id": "b6a5534687934386ad639806e20ed3ac"
    },
    {
      "Start": "1a5d3535a3464c6a89243aa44214759f",
      "End": "388ca8bc7e9944a8bb95520a22c3e570",
      "Id": "abba0240bdd44b7ea8695d17fee6ec02"
    },
    {
      "Start": "1a5d3535a3464c6a89243aa44214759f",
      "End": "a9dd9ca0335c4d4aa0fce53b7f9ed424",
      "Id": "5456556e5df643a68785d61bdc55174c"
    },
    {
      "Start": "b9f5886d645d46ae9a0e1475c271af63",
      "End": "88a2cf7e1b214cc2ab5b3dffb3d40c6b",
      "Id": "932b22cdcbd74b089c6b0a3c3610da58"
    },
    {
      "Start": "0969c26edac247bba2b280dee83a43b7",
      "End": "923a7f8c6c554126b4640aff8f71e5b9",
      "Id": "1e9ba57539474f7f8f2bb88dd0f88e85"
    },
    {
      "Start": "4c313aca0ec94364a07f9afec10e45b4",
      "End": "a8c84cb910e9494987d916c9189e5a53",
      "Id": "3bed51f7cf4e464cbf982058dcca031b"
    },
    {
      "Start": "4c313aca0ec94364a07f9afec10e45b4",
      "End": "e7709e46108f41b2bd7de2c2176c97ef",
      "Id": "33554c7efcae4bc7b849451541105560"
    },
    {
      "Start": "4c313aca0ec94364a07f9afec10e45b4",
      "End": "4cf04a409dd1461ebe4c77051ab346f1",
      "Id": "5102ed066274498c9078142f44dd6c35"
    },
    {
      "Start": "4c313aca0ec94364a07f9afec10e45b4",
      "End": "ee511b6ef01247f8a951593b14ecd8be",
      "Id": "971f31381aca4208b7082dd111506d63"
    },
    {
      "Start": "8c4f80708f344e3398d8a89b8bd0753c",
      "End": "1919e5ae2aed45108ce327c002194cd2",
      "Id": "369956ce9939455a9ce1912cb3702396"
    },
    {
      "Start": "bfc593bb21544e7f8028b746ec7bf85a",
      "End": "da7f55d6027f49edb95dc9f5dcd13c35",
      "Id": "c93f8acf7fa64316af6b5d961980f025"
    },
    {
      "Start": "3a532e6695c34696bba0827e21b1a870",
      "End": "81d9a881aef24408bd7beef91b41c27d",
      "Id": "7f71298afb20440cbf06beb55564d09c"
    },
    {
      "Start": "726b103d54ba45c2aabcf61b02d8a37c",
      "End": "d426f9dc94e64826b7625a4192577721",
      "Id": "d51f0e51f4d949bd86c6f2fce559b12f"
    },
    {
      "Start": "a7c379567bbf48ee9b26657669c00ae1",
      "End": "3136bdb69a1f42eda2540151c50e07ac",
      "Id": "e2ab9cb3701443fa8dcf188d1611d8d3"
    },
    {
      "Start": "01a4cd5326854bd294a2a993889d88b5",
      "End": "7e0e7a2242f549d79de6b12ebc3ebfb6",
      "Id": "162dabf2645f41cf8ab3c1eed8add257"
    },
    {
      "Start": "85c5b4b196ff4dfb9624681ed5860a2c",
      "End": "19fe24ec104243c5b697f1be81cff502",
      "Id": "d821b4888a4342c1b2532cd54c94d671"
    },
    {
      "Start": "94fa69ce98b14b82b02ab1d92df7ed2f",
      "End": "43fd6fde98114965ab84da09cbc4fd37",
      "Id": "852742bfcebc4fb0b8f77eb561660ec5"
    },
    {
      "Start": "35c16f2e2e204e7397619daf48ca68f2",
      "End": "24e8622440c048c992becc28cf27d337",
      "Id": "8fecfce6627f45c39566832ddb8efe1f"
    },
    {
      "Start": "35c16f2e2e204e7397619daf48ca68f2",
      "End": "1168f12095ee4563bc6c60f287d1e5ae",
      "Id": "fb0980784a09404b8f7430f19c4fc7a3"
    },
    {
      "Start": "c74ec41e43814437b68cc9025e62cf19",
      "End": "4b45a5159667488fa6f67db8b010c06a",
      "Id": "f6d92417242940c0acae4af8384e1772"
    },
    {
      "Start": "b307fd1e7ae74353abd61fe8b01c4c56",
      "End": "c2131a1af8cc44c49872b5b8315db0e4",
      "Id": "62a43fc238784d98ab3a658a9c5f7802"
    },
    {
      "Start": "336cce94f66a43ddb77062546d897082",
      "End": "e6f284c99d5c4dc9bd817e990c32cca8",
      "Id": "9abf75be360c43b5a9b12657b038be03"
    },
    {
      "Start": "36213ee8a82648fc81c610d90d6777c1",
      "End": "ff50c9616084418994f2737e6014f1a2",
      "Id": "1cce4e2d69ee400ab03e1625d5b54495"
    },
    {
      "Start": "b6402ab54fe8411a8613e5f61f83edeb",
      "End": "e8d10d812d7440c898484de402f6a227",
      "Id": "76f79284cec947b8b7cac0cdc766502a"
    },
    {
      "Start": "d366c0db1c9f4855be056b871ef30718",
      "End": "d078e5a8de5342ab906f665eae707913",
      "Id": "bb798ebd08d84b20bdc7542390f5c742"
    },
    {
      "Start": "826ed50ae6eb4134b69c9cda8930c6ba",
      "End": "b2ef0c377d714f6e8003535a0fee3c9c",
      "Id": "621e5c8983594f948488101c75035337"
    },
    {
      "Start": "7c436929cbc54f1db8f8cc0728de2588",
      "End": "723808ec5aaf4826821c0dc72a5e666e",
      "Id": "051dba91626f4ec79611fb8a0a2c8fe5"
    },
    {
      "Start": "8df20bb2327b446e97847c60a9e3fe30",
      "End": "54df72a8c9c2484195bf0fa0bab3622d",
      "Id": "e3b9f275e68c4937a5641360a44d4f13"
    },
    {
      "Start": "51bdf9ed0f8c4bcf98c36f8a9eeb6dff",
      "End": "96a66f430f7a46db8b4a1fccd39824d1",
      "Id": "9f2a4233ea2e407f8f1d5827786e46fd"
    },
    {
      "Start": "b42880dc13844dee95091fb5f4c994d9",
      "End": "781af1ec94694f149308afa9044f4ec4",
      "Id": "56dcbdc6969d48d7b68e63742dfdaf08"
    },
    {
      "Start": "120d16eeedc5463986e5fce6e4b84aca",
      "End": "0c0e96fa8abb4f14a1a3771da4e94d91",
      "Id": "be5564dc19124b51bafd1ed48321529e"
    },
    {
      "Start": "d53da644f8634977ac432d5a98841441",
      "End": "df3cf3c52f554d6aa5ad43d9adf884b4",
      "Id": "6296ba1874af4011ba9a4739ca899367"
    },
    {
      "Start": "144ee75c9c2b4b52ac84e00daeb85c3b",
      "End": "e18937faf1e8442e9f2c4f5ab1340d27",
      "Id": "29b365353cde462a83cba416b03e2be3"
    },
    {
      "Start": "144ee75c9c2b4b52ac84e00daeb85c3b",
      "End": "af9bc50badcb423fb9acef8a713e29be",
      "Id": "22c29d57d8f740c2aea30760a9fe7bda"
    },
    {
      "Start": "144ee75c9c2b4b52ac84e00daeb85c3b",
      "End": "41d995ec182041ec8c9614c2219201e5",
      "Id": "58e6cbfd686143ccbda00be663465a50"
    },
    {
      "Start": "144ee75c9c2b4b52ac84e00daeb85c3b",
      "End": "1e23c38453e94cc5a623e935a2af60fa",
      "Id": "0c70b382451742469b3350f31fab54cc"
    },
    {
      "Start": "4a947326c0fd4ab592d3a28e023f54ba",
      "End": "a3eb8744c12b4879a6488e6369acb75f",
      "Id": "36040be629d94e4fa1831bfed7943c62"
    },
    {
      "Start": "eaa7bc80839c4bb0938e268649113610",
      "End": "8c5d2fa85611440c8a638dae14d8d2cd",
      "Id": "1267c41e9edc41f88eb8230da0c79bd4"
    },
    {
      "Start": "e8d083bff98e45348161b2b0553fb0cd",
      "End": "88926de6cb4548f297e11b2afa8738d4",
      "Id": "8e33921554ce44eab9ab04e39f486482"
    },
    {
      "Start": "9793c959b4714bc995fb8aecc9a0b634",
      "End": "feaa1d706ee44fb2841e8c1496109bed",
      "Id": "c482e763dda549dc8800e10330c2c1bc"
    },
    {
      "Start": "fab2231aa45b4efd9cf263571dfdf783",
      "End": "bf90ec61c5354e43838d2fb6b40bb9c4",
      "Id": "34c616cff8b54efe8d1692d85ee2dbee"
    },
    {
      "Start": "c50c5a8e5e92477c968ba86f7c6bec96",
      "End": "6a7df0c9141a422987f13f2f00f8ac14",
      "Id": "93881d286e2d49ae8a796b7a1086ae53"
    }
  ],
  "Dependencies": [
    "bc5b8366-c225-4166-a8ed-a3b20817c8e2"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "9c358dc1d5634d20815c4bc0c51b7640"
      ]
    },
    {
      "Name": "bimorphNodes",
      "Version": "4.1.2",
      "ReferenceType": "Package",
      "Nodes": [
        "5ddea6ac24054441bfc488278352efb1",
        "92844d58d62341afae4d140a2bae72d4"
      ]
    },
    {
      "Name": "archi-lab.net",
      "Version": "2022.210.1022",
      "ReferenceType": "Package",
      "Nodes": [
        "1d45961dc47745078d30982cd5b5ee79"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -89.875198364257813,
      "EyeY": 30.845918655395508,
      "EyeZ": -14.4165678024292,
      "LookX": 38.197853088378906,
      "LookY": -20.80348014831543,
      "LookZ": -3.0193662643432617,
      "UpX": 0.27677649259567261,
      "UpY": 0.96068531274795532,
      "UpZ": -0.021877886727452278
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "357f397eb50f411aa960ef99015be17d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2620.9899225466,
        "Y": 2791.63422200864
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Inserts",
        "Id": "9c358dc1d5634d20815c4bc0c51b7640",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1925.4348123378577,
        "Y": 2414.021536565891
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "71a8571f764a4449bfa8368196af4702",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 889.59247745078733,
        "Y": 2930.3635447453157
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "216ff9442fe14cd2ba381426da48682b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1155.8014326746679,
        "Y": 2930.3635447453157
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "354a5f1330cb4b7bac16fd1e5d5200ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1940.9899225466,
        "Y": 2806.84536628724
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "c044ca81a2f641d8bd135e9def6fa451",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2366.4497377109919,
        "Y": 2414.021536565891
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "be72d3dd222a4e6891130584bec8f710",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1136.5971638903409,
        "Y": 3059.2988510017976
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "afab2653f1474a8c816dc0aa6ee4a567",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2303.91529568093,
        "Y": 2737.69392350117
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "dcc8413f71fa452285a31f37db0d8576",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2216.16799952444,
        "Y": 2993.8248005714
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "243abfe6c8dc4fb986668326102dffad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2729.3751108453203,
        "Y": 2388.021536565891
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "506a1e6fafe64fb6a716a17e96f61adb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3046.4497377109924,
        "Y": 2388.021536565891
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "88d030de9cab499f8c46f9a3b01a0f3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1940.9899225466,
        "Y": 2698.75581404844
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "24f1dc232140468687a3f7e93ab23183",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3645.4945138303951,
        "Y": 2283.021536565891
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "f4e55996bf3e47dd97c96247bb244de5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3328.4198869647234,
        "Y": 2362.021536565891
      },
      {
        "ShowGeometry": true,
        "Name": "Element.BoundingBox",
        "Id": "b18348313b334a7ba27bd80b72c06c05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1933.9005407299942,
        "Y": 3386.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "BoundingBox.GetElementsIntersect",
        "Id": "5ddea6ac24054441bfc488278352efb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2284.6468093867106,
        "Y": 3386.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "ef0383e4530c41b4accc5ea35d7e8622",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2643.2736750583522,
        "Y": 3386.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "58f996e70007404da1e9313f817afde0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3006.1990481926809,
        "Y": 3360.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "81da476492b1494a90de0e29bb193449",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3323.2736750583522,
        "Y": 3360.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "14947e629abe4413978543b848b82e27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3605.2438243120837,
        "Y": 3334.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "4a8f0b894f8441a18662735d5024e091",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3922.3184511777554,
        "Y": 3255.0274750939398
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "72aeb44550e64d73b2123ecca2ac06c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1956.9626761300938,
        "Y": 3825.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "ca83df76bc9346eb8ea4844ae60489a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2223.1716313539746,
        "Y": 3825.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "673918b226a94f37b1ce9cf5fccde7bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4500.7238701599445,
        "Y": 3752.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "87caea0d62ee4cbf8a96131399060ee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4817.7984970256166,
        "Y": 3752.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "String.Join",
        "Id": "353f3b5f52754bf7a12149d9b896c8f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5099.7686462793481,
        "Y": 3726.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "f2ba184864214f33baa0095f58a0da6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5416.8432731450193,
        "Y": 3656.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "ef406eefc0c24a688154094061485ead",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4137.7984970256166,
        "Y": 3778.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "BoundingBox.GetElementsIntersect",
        "Id": "92844d58d62341afae4d140a2bae72d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3779.1716313539741,
        "Y": 3778.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "Element.BoundingBox",
        "Id": "c5da75b98dfc48bb891d19503b911c2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3428.4253626972582,
        "Y": 3723.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "Elements.Type",
        "Id": "1d45961dc47745078d30982cd5b5ee79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2497.26118359278,
        "Y": 3817.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "a59a4037093946f4a75958de6e190466",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2815.7686462793476,
        "Y": 3817.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "5423dbea5bfc400f90ed73c8da92dc18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3119.2313328465116,
        "Y": 3859.2036191030616
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "be92b8f4ea25438f9ee0400a009dd1ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2815.7686462793476,
        "Y": 3927.203619103062
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "0b03e9ac6b7e4eac93354910eaf97d08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3428.4253626972582,
        "Y": 3833.203619103062
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "f14ef7e542014ef889a24595b6c7e0a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4795.1913436598688,
        "Y": 2259.4454168150414
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a2e66b9f5add4390ad74127ed1886518",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4476.6838809733017,
        "Y": 2285.4454168150414
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ff07ea1615cc47c3a576b5c01905c453",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4270.5983605966212,
        "Y": 2785.8754053775397
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "80a36d2a768240f9b0621abd386a5093",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4509.3539924267989,
        "Y": 2563.3254401174654
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "636aed7b752f41b78f7233a16df63a78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4509.3539924267989,
        "Y": 3026.7186932027653
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "a60f5389a9534b8ba58afb0ebfee73d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4827.861455113366,
        "Y": 3000.7186932027653
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "79b6b5bc5b644bdbb33fb8286d0b56a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4827.861455113366,
        "Y": 2537.3254401174654
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "88fdc54deebb443397ab6e135f6c1996",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4509.3539924267989,
        "Y": 3427.8948372118871
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "54865b4f03e84f059ee1bda880bb7046",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4827.861455113366,
        "Y": 3401.8948372118871
      }
    ],
    "Annotations": [
      {
        "Id": "8be2cbb9e74e4805a6d2a9b60dffb1fe",
        "Title": "hosts (walls)",
        "Nodes": [
          "357f397eb50f411aa960ef99015be17d",
          "afab2653f1474a8c816dc0aa6ee4a567",
          "88d030de9cab499f8c46f9a3b01a0f3a",
          "dcc8413f71fa452285a31f37db0d8576",
          "354a5f1330cb4b7bac16fd1e5d5200ba"
        ],
        "Left": 1930.9899225466,
        "Top": 2645.770739421574,
        "Width": 891.28358208955228,
        "Height": 441.14361338863182,
        "FontSize": 36.0,
        "InitialTop": 2698.75581404844,
        "InitialHeight": 440.0689865229615,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e3e4c795dddc4790b04423e7b3c28703",
        "Title": "followers (doors and windows embedded in walls)",
        "Nodes": [
          "24f1dc232140468687a3f7e93ab23183",
          "f4e55996bf3e47dd97c96247bb244de5",
          "243abfe6c8dc4fb986668326102dffad",
          "506a1e6fafe64fb6a716a17e96f61adb",
          "c044ca81a2f641d8bd135e9def6fa451",
          "9c358dc1d5634d20815c4bc0c51b7640"
        ],
        "Left": 1915.4348123378577,
        "Top": 2230.0364619390252,
        "Width": 1931.3432835820895,
        "Height": 380.23880597014931,
        "FontSize": 36.0,
        "InitialTop": 2283.021536565891,
        "InitialHeight": 329.0,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bb3c106fdbfc4b2a94c9974a1862f331",
        "Title": "connectors (walls - walls)",
        "Nodes": [
          "58f996e70007404da1e9313f817afde0",
          "81da476492b1494a90de0e29bb193449",
          "14947e629abe4413978543b848b82e27",
          "4a8f0b894f8441a18662735d5024e091",
          "ef0383e4530c41b4accc5ea35d7e8622",
          "5ddea6ac24054441bfc488278352efb1",
          "b18348313b334a7ba27bd80b72c06c05"
        ],
        "Left": 1923.9005407299942,
        "Top": 3202.042400467074,
        "Width": 2199.7014925373137,
        "Height": 328.6567164179105,
        "FontSize": 36.0,
        "InitialTop": 3255.0274750939398,
        "InitialHeight": 329.0,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9db8b8d6412b4fefad6e04443e8897ad",
        "Title": "floors (floors connected to walls)",
        "Nodes": [
          "673918b226a94f37b1ce9cf5fccde7bb",
          "87caea0d62ee4cbf8a96131399060ee0",
          "353f3b5f52754bf7a12149d9b896c8f6",
          "f2ba184864214f33baa0095f58a0da6c",
          "ef406eefc0c24a688154094061485ead",
          "92844d58d62341afae4d140a2bae72d4",
          "c5da75b98dfc48bb891d19503b911c2b",
          "ca83df76bc9346eb8ea4844ae60489a8",
          "72aeb44550e64d73b2123ecca2ac06c1",
          "1d45961dc47745078d30982cd5b5ee79",
          "a59a4037093946f4a75958de6e190466",
          "5423dbea5bfc400f90ed73c8da92dc18",
          "0b03e9ac6b7e4eac93354910eaf97d08",
          "be92b8f4ea25438f9ee0400a009dd1ea"
        ],
        "Left": 1946.9626761300938,
        "Top": 3603.2185444761958,
        "Width": 3671.1641791044781,
        "Height": 400.6567164179105,
        "FontSize": 36.0,
        "InitialTop": 3656.2036191030616,
        "InitialHeight": 460.00000000000045,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "29f998fff77f42ad9b2d891007053994",
        "Title": "Wall as Core connections.\r\n",
        "Nodes": [
          "71a8571f764a4449bfa8368196af4702",
          "216ff9442fe14cd2ba381426da48682b",
          "be72d3dd222a4e6891130584bec8f710"
        ],
        "Left": 879.59247745078733,
        "Top": 2833.6769775811367,
        "Width": 460.29850746268653,
        "Height": 293.63679879379515,
        "FontSize": 36.0,
        "InitialTop": 2930.3635447453157,
        "InitialHeight": 227.33749243576176,
        "TextblockHeight": 86.68656716417911,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "8e046306f9114dbcbc366772e48fbed3",
        "Title": "Input.\r\n\r\n",
        "Nodes": [
          "f14ef7e542014ef889a24595b6c7e0a2",
          "a2e66b9f5add4390ad74127ed1886518",
          "ff07ea1615cc47c3a576b5c01905c453",
          "80a36d2a768240f9b0621abd386a5093",
          "636aed7b752f41b78f7233a16df63a78",
          "a60f5389a9534b8ba58afb0ebfee73d5",
          "79b6b5bc5b644bdbb33fb8286d0b56a3",
          "88fdc54deebb443397ab6e135f6c1996",
          "54865b4f03e84f059ee1bda880bb7046"
        ],
        "Left": 4260.5983605966212,
        "Top": 2119.7737750239967,
        "Width": 777.1436915316699,
        "Height": 1401.001659202816,
        "FontSize": 36.0,
        "InitialTop": 2259.4454168150414,
        "InitialHeight": 860.04818473469231,
        "TextblockHeight": 129.67164179104478,
        "Background": "#FFFFFFFF"
      }
    ],
    "X": -2713.5117152620742,
    "Y": -1867.9847143464469,
    "Zoom": 0.76516128965753949
  }
}