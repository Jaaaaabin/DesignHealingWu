{
  "Uuid": "726241b2-e4b9-4ad0-a7f0-98d2f84856fb",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Execute_visualizeSelection",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\n\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\nelement = IN[0]\r\n\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nhealBasics.rerunNodes()\r\n\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n###############################################################\r\n# End\r\nOUT = out\r\n\r\n\r\n\r\n\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "98d476202ed247bd8bfff3b2593e4beb",
      "Inputs": [
        {
          "Id": "63cab65f810d469b97420304912f03b3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75dc309272ec4a8e8a727ebd59df77af",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.Current",
      "Id": "a611d62f3a7b412e8a1323104f7b371e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c35363385f44b1a9978090ce806dc10",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current document\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.ActiveView",
      "Id": "acddef450af14bd5900005c32ac36798",
      "Inputs": [
        {
          "Id": "2b082b8d812743e29823ff6ab22c30e0",
          "Name": "document",
          "Description": "Revit.Application.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8a555ea415c4c689946c7f29183d444",
          "Name": "View",
          "Description": "View",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the active view for the document\n\nDocument.ActiveView: View"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\nimport healVisual\r\nimportlib.reload(healVisual)\r\n\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\nelements = UnwrapElement(IN[0])\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nout = healVisual.setGraphicsStyle(elements)\r\n\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n###############################################################\r\n# End\r\nOUT = out",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9fae78c7d11b4496abd78d87d43d7819",
      "Inputs": [
        {
          "Id": "27738e17363d45dc861b67bec8c24733",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3caaaebe7f584e86afe4d9bcd11424d2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\nimport healVisual\r\nimportlib.reload(healVisual)\r\n\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\nelements = UnwrapElement(IN[0])\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nout = healVisual.highlightSelection(elements)\r\n\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n###############################################################\r\n# End\r\nOUT = out",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b1595b8053b1433795b5a0a148752489",
      "Inputs": [
        {
          "Id": "35216b57b68b40c5abc903dd02bd5bbb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7fb06d9f54743a6a16238ae0a142536",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\nimport healVisual\r\nimportlib.reload(healVisual)\r\n\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\ncsvPath = IN[0]\r\n\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nout = healBasics.readCSV(csvPath, skip_first_col=True, transpose=True, clear_list=True)\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n###############################################################\r\n# End\r\nOUT = out\r\n\r\n\r\n\r\n\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "0dc3fe32ddf04c68867f42204a709df9",
      "Inputs": [
        {
          "Id": "1b46d1fc26b8438684d97115b8d545fb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e49b2befd3ea49a5bf8716e9a4b637af",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\nimport healVisual\r\nimportlib.reload(healVisual)\r\n\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\nelement = IN[0]\r\n\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nout = healBasics.getElementsByIfcGUIDs(doc, element)\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n###############################################################\r\n# End\r\nOUT = out\r\n\r\n\r\n\r\n\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "70d927f74a1a429fb9e753f59874f211",
      "Inputs": [
        {
          "Id": "a750db125c2c41bcbc9f3dbc150cdbce",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab828bc1ae64481aa34a84b26f69b44c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "4eab3176e407406a9d2e1db51da0d658",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "09c8152e75f241ff9dd8f6657cc3f8aa",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "C:\\dev\\phd\\ModelHealer\\ini\\topo\\res_ini_perrule_failure.csv",
      "Id": "21c8369217be407186583a6684b46beb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d2d69766e4c40539bc58ac7e4cd2f70",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\nimport healVisual\r\nimportlib.reload(healVisual)\r\n\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\ncsvPath = IN[0]\r\n\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nout = healBasics.readCSV(csvPath, skip_first_col=True, transpose=True, clear_list=True)\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n###############################################################\r\n# End\r\nOUT = out\r\n\r\n\r\n\r\n\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bd40b4c9f8e842dfaabd69e58c34a4be",
      "Inputs": [
        {
          "Id": "d67686cecf29493bbbbfbd5beecb8577",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59e36b2ebe0e42679afa0d090c120429",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "C:\\dev\\phd\\ModelHealer\\ini\\topo\\res_ini_perrule_failureneighbor.csv",
      "Id": "41a7c3d8873e4b23bb2d985499115fc9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f6bbf548ab4f4861a4de3870fdd8cdd0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "###############################################################\r\n# Import general packages.\r\nimport clr\r\nimport sys\r\nimport math\r\nimport System\r\nimport io\r\nimport os\r\nimport importlib\r\n\r\n# Import Revit/Dynamo API related packages.\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo\r\nfrom System import Array\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript import *\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import Parameter\r\nfrom Autodesk.Revit.DB.Architecture import *\r\nfrom Autodesk.Revit.DB import IFailuresPreprocessor\r\n\r\n# Import external python packages.\r\nlocalapp = os.getenv(r'LOCALAPPDATA')\r\nsys.path.append(os.path.join(localapp, r'python-3.8.3-embed-amd64\\Lib\\site-packages'))\r\n\r\n# Import customized python packgaes.\r\nsys.path.append(r'C:\\dev\\phd\\jw\\healing\\src\\godyn')\r\n\r\nimport healBasics\r\nimportlib.reload(healBasics)\r\nimport healChecks\r\nimportlib.reload(healChecks)\r\nimport healParameters\r\nimportlib.reload(healParameters)\r\nimport healVisual\r\nimportlib.reload(healVisual)\r\n\r\n\r\ndef ConvertColor(e):\r\n\treturn Autodesk.Revit.DB.Color(e.Red, e.Green, e.Blue)\r\n\r\ndef OverrideColorPattern(e, c, f, view):\r\n\tgSettings = OverrideGraphicSettin\r\n###############################################################\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\n###############################################################\r\n# Temporary functions\r\n\r\n\r\n###############################################################\r\n# Prepare the input (of the Python Node)\r\nelement = UnwrapElement(IN[0])\r\ncolor = UnwrapElement(IN[1])\r\nview = UnwrapElement(IN[2])\r\n\r\n##############################################################\r\n# Prepare the output (of the Python Node)\r\nout = []\r\n\r\n\r\n###############################################################\r\n# Start Transaction in Revit\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\r\n###############################################################\r\n# Main part\r\nout = healVisual.overrideSpaceDisplay(element, color, view)\r\n\r\n###############################################################\r\n# End Transaction in Revit\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\nOUT=out\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "becd9bd604f94c638a0993660a1894f7",
      "Inputs": [
        {
          "Id": "676c6a107ff34221aba9d8b85d237d5a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce7a39334b8e48c997a92fabe47e5491",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9107b187516f40d09ccb4483ccb1ff97",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad1bb12ecaed4921aadba41dfeff2d34",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c89ca7a788714b48bb22960462e18599",
      "Inputs": [
        {
          "Id": "f7c3e397c9684fcead11aef3712bdc5c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f28bb52dfda43db8d9e8526f610c82c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be3086a38d22495c95689bab058e8bcb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "63ee1d835f0a4bd28902feab45733915",
      "Inputs": [
        {
          "Id": "d4dec081b6ba4957b868a17bad77b08f",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebbcc832e46042fbba711f6201eb4f0c",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1990247b38e24563af5f33cd4fc49582",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "b6d63a16efe74954930bdad5db668bf1",
      "Inputs": [
        {
          "Id": "74afbb1b64b04c0fad05bb3d2bfe495a",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ead314efc740450196d569c66bd3ac78",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "0a39683becdd4272abb444108bfa617f",
      "Inputs": [
        {
          "Id": "ee523fc814b6455f93fc5613eef99c89",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff8971358ca947e9b059e0f14b0f27dc",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec65b417774f438fa07938af73dee125",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "2eb3efd25f4843d5a51c4aa50b4a832d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ec28354011f412fbbb6c41486bd626b",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"View Name\";",
      "Id": "56e2553f601644f1a719a275ec05eac6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84cf0fa51b1b464fa7288c4141e3bd8a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "f0f68e590feb4a4e98ea79a392f62546",
      "Inputs": [
        {
          "Id": "082b6b613aaa453a91559ece859c5437",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c76d69b84e074790b3161ddb94d08d93",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98dfd0966f2445b790a5b93e4eddbb6d",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ddc98a41c7b4169a2146884e00b31d5",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "71b9073f9e214ac580d677703319d008",
      "Inputs": [
        {
          "Id": "42d3ab0f1d9748738210280239cbb1af",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89ed3609c1b343ecb9ae5ec8213bd779",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f29ee85012a84182b7930b2898e27860",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 684,
      "SelectedString": "OST_Views",
      "NodeType": "ExtensionNode",
      "Id": "5ce62500b4d24255ad0dae028327a89f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae297ab2da5f4ac79233759e9cc0f37e",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Name",
      "Id": "f908fc71f99d4696be9883d475aff9dd",
      "Inputs": [
        {
          "Id": "d789057b56a94cd6a23ef050cfb5ad31",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "495b4c96d7d444faa9e3ce9250e48c92",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the level\n\nLevel.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "23a94b80-4bd0-436f-a1b1-f77654b4428c",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "7e5b9bdff29247af99a57e4bce07503d",
      "Inputs": [
        {
          "Id": "1ceae0ba466d4f6e8a9dc388d708ba53",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "649ff5db76124ff8ae314b62e6eb4798",
          "Name": "level",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's level"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 255.0,
      "Id": "414e00f494d84ad78a35e1022d43cf4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "926a54a51cd24a35a5835893303ec273",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Color.ByARGB@int,int,int,int",
      "Id": "af219076a92541d285023e605015533c",
      "Inputs": [
        {
          "Id": "eac21e70709a4fa7bf41d46e6972d54f",
          "Name": "alpha",
          "Description": "Alpha value (between 0 and 255 inclusive)\n\nint\nDefault value : 255",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afc1051576db45ee8a087bd3c6364219",
          "Name": "red",
          "Description": "Red value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b612e421ac204fbb808bb441617aa6e7",
          "Name": "green",
          "Description": "Green value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3bbaaf48fc64297a2f425ce251d37f0",
          "Name": "blue",
          "Description": "Blue value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34a79f01e0a6438f85ad0d3e11e59689",
          "Name": "color",
          "Description": "Color created from ARGB",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a color by alpha, red, green, and blue components.\n\nColor.ByARGB (alpha: int = 255, red: int = 0, green: int = 0, blue: int = 0): Color"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "19b8c285e2ff4c7cac03a374c1e19324",
      "Inputs": [
        {
          "Id": "f540dc74bad645e890e3caaa1d26d028",
          "Name": "string",
          "Description": "String to replace substrings in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c35b93fbb1f744a69dfe721a9a288d1d",
          "Name": "searchFor",
          "Description": "Text to be replaced.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "701434e70fdb407dab105d811f841c7d",
          "Name": "replaceWith",
          "Description": "Text to replace with.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef3d88f96bd345bcb9b7f4cdb55d3389",
          "Name": "string",
          "Description": "String with replacements made.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all occurrences of text in a string with other text.\n\nString.Replace (string: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "D_ue",
      "Id": "ad0ee0fbda484274a291730dc7408cf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8c728030eca4309ab4fb158066974b8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9660fba286294d1fa3e42166d08fd76b",
      "Inputs": [
        {
          "Id": "2cd8efe53c1c49e0b307069a0e43691b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5ac42cbc84ff4f838b9e851c5eec3c79",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d727d588ce2347339d78a26767685712",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "674d867b096b46a68f61988c2c82904b",
      "Inputs": [
        {
          "Id": "13e55e6c5ef04b81b8f2bcf445f4a586",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a46dfc081574d14b8f5adf21e2fbc5c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab3b6506d0c64b3081bc0ca913ae65b5",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "IBC1020_2",
      "Id": "4ae899da263e482eb15acf69d788256b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1335c18aae47402f98327040ddfb3cf7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d43e86cc4e824a31846ee7e3270ec9aa",
      "Inputs": [
        {
          "Id": "39ad9dac521e4338931744abbd4acb5e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b6d26a9dadf422784c9b02af243b1e2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c18f110b2c24b04b175c09514892b91",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "02dbf6b75e29496781562d1fa4c1a57d",
      "Inputs": [
        {
          "Id": "40992e1c367145c8919d8b7705affeea",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66ce6facadb24d4b86bfe0632c75f849",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51b6a17b5d394ae390af79b0c817b203",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "RES",
      "Id": "b8e68b1ef0ba40cc859fcede3ef773dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52eaccd0e91c46358fdaccc54ee4b4a7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "6ecedff98826453087b8edc94d913888",
      "Inputs": [
        {
          "Id": "651863877ef64c75a266cf1a0b7ff02e",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17f189c1dc654ede9ddc8cfbfb4571e6",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa62d441c29e473dab76ceb3c75ad784",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "27ea494b414b48adb6620b39be6eba99",
      "Inputs": [
        {
          "Id": "78c65b06304e463693336e99501c97e8",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94900e3968834c4a9619d3fa4c5b187f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "641b0645a4234a2b8dc46542788941f8",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "_",
      "Id": "ccf4368a6af248d69a3ece47806f98b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ab61c134de74d7a90abafa0a1a679f8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    }
  ],
  "Connectors": [
    {
      "Start": "0c35363385f44b1a9978090ce806dc10",
      "End": "2b082b8d812743e29823ff6ab22c30e0",
      "Id": "bcd3d5891395468da32965943247d99c"
    },
    {
      "Start": "b8a555ea415c4c689946c7f29183d444",
      "End": "27738e17363d45dc861b67bec8c24733",
      "Id": "2c8bf7e3efcf4ec9a0442c5529af99ab"
    },
    {
      "Start": "e49b2befd3ea49a5bf8716e9a4b637af",
      "End": "2cd8efe53c1c49e0b307069a0e43691b",
      "Id": "ce09227b8eba4f87893fd3c05e8ce725"
    },
    {
      "Start": "e49b2befd3ea49a5bf8716e9a4b637af",
      "End": "39ad9dac521e4338931744abbd4acb5e",
      "Id": "186bb900d63f4f04bca0bc8e045e1f37"
    },
    {
      "Start": "ab828bc1ae64481aa34a84b26f69b44c",
      "End": "1ceae0ba466d4f6e8a9dc388d708ba53",
      "Id": "38350bfc24c949e2944c8ae52cc25103"
    },
    {
      "Start": "ab828bc1ae64481aa34a84b26f69b44c",
      "End": "676c6a107ff34221aba9d8b85d237d5a",
      "Id": "fdd72d5946aa4f548dd4b33748f2a89d"
    },
    {
      "Start": "09c8152e75f241ff9dd8f6657cc3f8aa",
      "End": "5ac42cbc84ff4f838b9e851c5eec3c79",
      "Id": "e78dbff95fea47048e4dda41f8869e63"
    },
    {
      "Start": "09c8152e75f241ff9dd8f6657cc3f8aa",
      "End": "66ce6facadb24d4b86bfe0632c75f849",
      "Id": "957f565cbff3441697c49438fe84b6a2"
    },
    {
      "Start": "7d2d69766e4c40539bc58ac7e4cd2f70",
      "End": "1b46d1fc26b8438684d97115b8d545fb",
      "Id": "472a8a5ab60246768a962413a772267a"
    },
    {
      "Start": "f6bbf548ab4f4861a4de3870fdd8cdd0",
      "End": "d67686cecf29493bbbbfbd5beecb8577",
      "Id": "14b51bd3d07d484e8f7c63a0f6b9058d"
    },
    {
      "Start": "be3086a38d22495c95689bab058e8bcb",
      "End": "9107b187516f40d09ccb4483ccb1ff97",
      "Id": "a60c39a55ea44d28aae05716efd07ed3"
    },
    {
      "Start": "1990247b38e24563af5f33cd4fc49582",
      "End": "c76d69b84e074790b3161ddb94d08d93",
      "Id": "32cc3320eb08430d9a5d742b10da8516"
    },
    {
      "Start": "ead314efc740450196d569c66bd3ac78",
      "End": "ee523fc814b6455f93fc5613eef99c89",
      "Id": "6645d1c667c844fe8a1958d673dc717b"
    },
    {
      "Start": "ec65b417774f438fa07938af73dee125",
      "End": "082b6b613aaa453a91559ece859c5437",
      "Id": "13ebf1f81f4c4dbbb51c6e1b4209a293"
    },
    {
      "Start": "ec65b417774f438fa07938af73dee125",
      "End": "42d3ab0f1d9748738210280239cbb1af",
      "Id": "ee05d67d7d5c4e16bb04560ae41f0738"
    },
    {
      "Start": "8ec28354011f412fbbb6c41486bd626b",
      "End": "ff8971358ca947e9b059e0f14b0f27dc",
      "Id": "9a47f69c202a4249bd29e1b1d4c57b04"
    },
    {
      "Start": "84cf0fa51b1b464fa7288c4141e3bd8a",
      "End": "89ed3609c1b343ecb9ae5ec8213bd779",
      "Id": "976b17a881db453a9971b84fe6375999"
    },
    {
      "Start": "98dfd0966f2445b790a5b93e4eddbb6d",
      "End": "f7c3e397c9684fcead11aef3712bdc5c",
      "Id": "e191556c7c3141b8b83ed6c5af7474b5"
    },
    {
      "Start": "f29ee85012a84182b7930b2898e27860",
      "End": "d4dec081b6ba4957b868a17bad77b08f",
      "Id": "fa378174ad7147399850463d78f443d9"
    },
    {
      "Start": "ae297ab2da5f4ac79233759e9cc0f37e",
      "End": "74afbb1b64b04c0fad05bb3d2bfe495a",
      "Id": "2f2d103482774c1cba5e87547595f5e1"
    },
    {
      "Start": "495b4c96d7d444faa9e3ce9250e48c92",
      "End": "f540dc74bad645e890e3caaa1d26d028",
      "Id": "4a76470564cb4bf2a2851b86d23151fb"
    },
    {
      "Start": "649ff5db76124ff8ae314b62e6eb4798",
      "End": "d789057b56a94cd6a23ef050cfb5ad31",
      "Id": "1e4c1a584b584ebb93f80b08b7745df2"
    },
    {
      "Start": "926a54a51cd24a35a5835893303ec273",
      "End": "b612e421ac204fbb808bb441617aa6e7",
      "Id": "9caa2fcd6a4f4ca4867c76372fdf5b4e"
    },
    {
      "Start": "926a54a51cd24a35a5835893303ec273",
      "End": "afc1051576db45ee8a087bd3c6364219",
      "Id": "eae529e8d6c24aeab51103ae88abeb87"
    },
    {
      "Start": "34a79f01e0a6438f85ad0d3e11e59689",
      "End": "ce7a39334b8e48c997a92fabe47e5491",
      "Id": "9859319e41784123985b1927e708ca73"
    },
    {
      "Start": "ef3d88f96bd345bcb9b7f4cdb55d3389",
      "End": "78c65b06304e463693336e99501c97e8",
      "Id": "813d3102fd6f4b1d92e0f5b82bd72d24"
    },
    {
      "Start": "d8c728030eca4309ab4fb158066974b8",
      "End": "c35b93fbb1f744a69dfe721a9a288d1d",
      "Id": "acf82a7e0edc430da32942863f2bec41"
    },
    {
      "Start": "d727d588ce2347339d78a26767685712",
      "End": "13e55e6c5ef04b81b8f2bcf445f4a586",
      "Id": "8f6901a8353240faa2fe7edd32a8f855"
    },
    {
      "Start": "ab3b6506d0c64b3081bc0ca913ae65b5",
      "End": "1b6d26a9dadf422784c9b02af243b1e2",
      "Id": "b3917c957cd04b28b990e18244e3df48"
    },
    {
      "Start": "1335c18aae47402f98327040ddfb3cf7",
      "End": "2a46dfc081574d14b8f5adf21e2fbc5c",
      "Id": "1626f2b176134a25927a022ecb5ed514"
    },
    {
      "Start": "1335c18aae47402f98327040ddfb3cf7",
      "End": "17f189c1dc654ede9ddc8cfbfb4571e6",
      "Id": "2aab0748380a40949e2cb8fe9adfdf01"
    },
    {
      "Start": "9c18f110b2c24b04b175c09514892b91",
      "End": "40992e1c367145c8919d8b7705affeea",
      "Id": "2da014fb5d6448a9ae2de2dc3dbcda09"
    },
    {
      "Start": "51b6a17b5d394ae390af79b0c817b203",
      "End": "a750db125c2c41bcbc9f3dbc150cdbce",
      "Id": "380e2b0dcfca465ebd267bb626f97bb8"
    },
    {
      "Start": "52eaccd0e91c46358fdaccc54ee4b4a7",
      "End": "701434e70fdb407dab105d811f841c7d",
      "Id": "06ac4d6b98fb4546bb31ae6d60eb3a52"
    },
    {
      "Start": "aa62d441c29e473dab76ceb3c75ad784",
      "End": "ebbcc832e46042fbba711f6201eb4f0c",
      "Id": "5d44300a7c80462a9c5fd485d3bf3f05"
    },
    {
      "Start": "641b0645a4234a2b8dc46542788941f8",
      "End": "651863877ef64c75a266cf1a0b7ff02e",
      "Id": "20f7b2aa424741528ed10e566105ab20"
    },
    {
      "Start": "8ab61c134de74d7a90abafa0a1a679f8",
      "End": "94900e3968834c4a9619d3fa4c5b187f",
      "Id": "5133bfbf87114a0595b75e8dffa38db4"
    }
  ],
  "Dependencies": [
    "23a94b80-4bd0-436f-a1b1-f77654b4428c"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "7e5b9bdff29247af99a57e4bce07503d"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -67.518417358398438,
      "EyeY": 16.54627799987793,
      "EyeZ": -3.9616622924804688,
      "LookX": 50.862838745117188,
      "LookY": -29.009061813354492,
      "LookZ": -10.186817169189453,
      "UpX": 0.28399279713630676,
      "UpY": 0.95713800191879272,
      "UpZ": -0.056877776980400085
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "🧡rerunNodes🧡",
        "Id": "98d476202ed247bd8bfff3b2593e4beb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": -1210.1997101141817,
        "Y": 169.93279087483862
      },
      {
        "ShowGeometry": true,
        "Name": "Document.Current",
        "Id": "a611d62f3a7b412e8a1323104f7b371e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1000.4097473297816,
        "Y": 166.00511879011509
      },
      {
        "ShowGeometry": true,
        "Name": "Document.ActiveView",
        "Id": "acddef450af14bd5900005c32ac36798",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -767.156015986498,
        "Y": 166.00511879011509
      },
      {
        "ShowGeometry": true,
        "Name": "setGraphicsStyle",
        "Id": "9fae78c7d11b4496abd78d87d43d7819",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -457.96198613575166,
        "Y": 166.00511879011509
      },
      {
        "ShowGeometry": true,
        "Name": "highlightSelection",
        "Id": "b1595b8053b1433795b5a0a148752489",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 361.6406676484745,
        "Y": 176.9145101412696
      },
      {
        "ShowGeometry": true,
        "Name": "readCSV",
        "Id": "0dc3fe32ddf04c68867f42204a709df9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1171.6782927432196,
        "Y": 427.41491810222004
      },
      {
        "ShowGeometry": true,
        "Name": "getElementsByIfcGUIDs",
        "Id": "70d927f74a1a429fb9e753f59874f211",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 176.56051322692974,
        "Y": 461.41491810222004
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "4eab3176e407406a9d2e1db51da0d658",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1171.6782927432196,
        "Y": 547.4149181022201
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "21c8369217be407186583a6684b46beb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1481.2623583989966,
        "Y": 427.41894282332919
      },
      {
        "ShowGeometry": true,
        "Name": "readCSV",
        "Id": "bd40b4c9f8e842dfaabd69e58c34a4be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 152.13776184105473,
        "Y": 54.1111299205179
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "41a7c3d8873e4b23bb2d985499115fc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": -167.08611875596023,
        "Y": 54.1111299205179
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "becd9bd604f94c638a0993660a1894f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1229.3595726798812,
        "Y": 759.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "c89ca7a788714b48bb22960462e18599",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 946.67300551570224,
        "Y": 891.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "63ee1d835f0a4bd28902feab45733915",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 421.41927417241823,
        "Y": 917.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "b6d63a16efe74954930bdad5db668bf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -592.84938254399981,
        "Y": 754.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "0a39683becdd4272abb444108bfa617f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -266.46132284250723,
        "Y": 796.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "2eb3efd25f4843d5a51c4aa50b4a832d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -592.84938254399981,
        "Y": 864.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "56e2553f601644f1a719a275ec05eac6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -266.46132284250723,
        "Y": 931.77347745133045
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "f0f68e590feb4a4e98ea79a392f62546",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 674.73270700823923,
        "Y": 891.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "71b9073f9e214ac580d677703319d008",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 58.4939010380898,
        "Y": 863.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "5ce62500b4d24255ad0dae028327a89f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -874.1031138872836,
        "Y": 754.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Level.Name",
        "Id": "f908fc71f99d4696be9883d475aff9dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -874.1031138872836,
        "Y": 898.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Level",
        "Id": "7e5b9bdff29247af99a57e4bce07503d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1170.4016213499701,
        "Y": 895.83554069153251
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "414e00f494d84ad78a35e1022d43cf4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 674.73270700823923,
        "Y": 744.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "Color.ByARGB",
        "Id": "af219076a92541d285023e605015533c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 946.67300551570224,
        "Y": 705.56014411799731
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "19b8c285e2ff4c7cac03a374c1e19324",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -592.84938254399981,
        "Y": 973.56014411799708
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ad0ee0fbda484274a291730dc7408cf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -874.1031138872836,
        "Y": 1007.5601441179971
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "9660fba286294d1fa3e42166d08fd76b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -947.02157632530907,
        "Y": 487.41491810222004
      },
      {
        "ShowGeometry": true,
        "Name": "List.IndexOf",
        "Id": "674d867b096b46a68f61988c2c82904b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -667.200680802921,
        "Y": 487.41491810222004
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4ae899da263e482eb15acf69d788256b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1432.1998162006162,
        "Y": 528.258323715878
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "d43e86cc4e824a31846ee7e3270ec9aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -382.36485990739868,
        "Y": 461.41491810222004
      },
      {
        "ShowGeometry": true,
        "Name": "List.RemoveItemAtIndex",
        "Id": "02dbf6b75e29496781562d1fa4c1a57d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -102.54396438501067,
        "Y": 461.41491810222004
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b8e68b1ef0ba40cc859fcede3ef773dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -874.1031138872836,
        "Y": 1092.560144117997
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "6ecedff98826453087b8edc94d913888",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 58.4939010380898,
        "Y": 997.56014411799708
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "27ea494b414b48adb6620b39be6eba99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -266.46132284250723,
        "Y": 1040.560144117997
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ccf4368a6af248d69a3ece47806f98b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -592.84938254399981,
        "Y": 1133.560144117997
      }
    ],
    "Annotations": [
      {
        "Id": "d35f0cbc61fe47f2bd150d7191471ecd",
        "Title": "Tune the graphics style.\r\n",
        "Nodes": [
          "a611d62f3a7b412e8a1323104f7b371e",
          "acddef450af14bd5900005c32ac36798",
          "9fae78c7d11b4496abd78d87d43d7819"
        ],
        "Left": -1010.4097473297816,
        "Top": 69.318551625935982,
        "Width": 723.64179104477626,
        "Height": 200.52238805970148,
        "FontSize": 36.0,
        "InitialTop": 166.00511879011509,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.68656716417911,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6ea99ca09a8b4ed38c255970e60dfc04",
        "Title": "Viasulize/highlight the related building elements.\r\n",
        "Nodes": [
          "41a7c3d8873e4b23bb2d985499115fc9",
          "bd40b4c9f8e842dfaabd69e58c34a4be",
          "b1595b8053b1433795b5a0a148752489"
        ],
        "Left": -177.08611875596023,
        "Top": -85.560511870526881,
        "Width": 717.80141327010642,
        "Height": 366.31084290731883,
        "FontSize": 36.0,
        "InitialTop": 54.1111299205179,
        "InitialHeight": 320.18253921916164,
        "TextblockHeight": 129.67164179104478,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "3182c4b02aaf49999ae835501f904125",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "af219076a92541d285023e605015533c",
          "414e00f494d84ad78a35e1022d43cf4c",
          "7e5b9bdff29247af99a57e4bce07503d",
          "f908fc71f99d4696be9883d475aff9dd",
          "5ce62500b4d24255ad0dae028327a89f",
          "71b9073f9e214ac580d677703319d008",
          "f0f68e590feb4a4e98ea79a392f62546",
          "56e2553f601644f1a719a275ec05eac6",
          "2eb3efd25f4843d5a51c4aa50b4a832d",
          "0a39683becdd4272abb444108bfa617f",
          "b6d63a16efe74954930bdad5db668bf1",
          "63ee1d835f0a4bd28902feab45733915",
          "c89ca7a788714b48bb22960462e18599",
          "becd9bd604f94c638a0993660a1894f7",
          "6ecedff98826453087b8edc94d913888",
          "ccf4368a6af248d69a3ece47806f98b5",
          "19b8c285e2ff4c7cac03a374c1e19324",
          "27ea494b414b48adb6620b39be6eba99",
          "b8e68b1ef0ba40cc859fcede3ef773dd",
          "ad0ee0fbda484274a291730dc7408cf2"
        ],
        "Left": -1180.4016213499701,
        "Top": 652.57506949113167,
        "Width": 2544.4179104477616,
        "Height": 548.99999999999955,
        "FontSize": 36.0,
        "InitialTop": 705.56014411799731,
        "InitialHeight": 483.73889109845436,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      },
      {
        "Id": "201a92d123c14ccea5f234b79f494b58",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "0dc3fe32ddf04c68867f42204a709df9",
          "70d927f74a1a429fb9e753f59874f211",
          "4eab3176e407406a9d2e1db51da0d658",
          "9660fba286294d1fa3e42166d08fd76b",
          "674d867b096b46a68f61988c2c82904b",
          "d43e86cc4e824a31846ee7e3270ec9aa",
          "02dbf6b75e29496781562d1fa4c1a57d"
        ],
        "Left": -1181.6782927432196,
        "Top": 374.42984347535435,
        "Width": 1572.4179104477612,
        "Height": 241.00000000000011,
        "FontSize": 36.0,
        "InitialTop": 427.41491810222004,
        "InitialHeight": 386.15340236745897,
        "TextblockHeight": 42.985074626865675,
        "Background": "#FFC1D676"
      }
    ],
    "X": -727.87019392182833,
    "Y": -916.65042065299713,
    "Zoom": 1.4174659479724963
  }
}